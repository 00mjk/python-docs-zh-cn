# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# 心韵 方 <fxy9905@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-01 10:14+0900\n"
"PO-Revision-Date: 2017-02-16 17:37+0000\n"
"Last-Translator: 心韵 方 <fxy9905@gmail.com>, 2019\n"
"Language-Team: Chinese (China) (https://www.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/number.rst:6
msgid "Number Protocol"
msgstr "数字协议"

#: ../../c-api/number.rst:11
msgid ""
"Returns ``1`` if the object *o* provides numeric protocols, and false "
"otherwise. This function always succeeds."
msgstr "如果对象 ‘o’ 提供数字协议，返回真（1），否则返回假（0）。这个函数总是有返回值的。"

#: ../../c-api/number.rst:17
msgid ""
"Returns the result of adding *o1* and *o2*, or *NULL* on failure.  This is "
"the equivalent of the Python expression ``o1 + o2``."
msgstr "返回 *o1* 、*o2*相加的结果，如果失败，返回 *NULL* 。等价于Python中的表达式 ``o1 + o2``。"

#: ../../c-api/number.rst:23
msgid ""
"Returns the result of subtracting *o2* from *o1*, or *NULL* on failure.  "
"This is the equivalent of the Python expression ``o1 - o2``."
msgstr "返回 *o1* 减去 *o2* 的结果，如果失败，返回 *NULL* 。等价于Python中的表达式 ``o1 - o2``。"

#: ../../c-api/number.rst:29
msgid ""
"Returns the result of multiplying *o1* and *o2*, or *NULL* on failure.  This"
" is the equivalent of the Python expression ``o1 * o2``."
msgstr "返回*o1* 、*o2*相乘的结果，如果失败，返回 *NULL* 。等价于Python中的表达式 ``o1 * o2``。"

#: ../../c-api/number.rst:35
msgid ""
"Returns the result of matrix multiplication on *o1* and *o2*, or *NULL* on "
"failure.  This is the equivalent of the Python expression ``o1 @ o2``."
msgstr "返回*o1* 、*o2*做矩阵乘法的结果，如果失败，返回 *NULL* 。等价于Python中的表达式 ``o1 @ o2``。"

#: ../../c-api/number.rst:43
msgid ""
"Return the floor of *o1* divided by *o2*, or *NULL* on failure.  This is "
"equivalent to the \"classic\" division of integers."
msgstr "返回 *o1* 除以 *o2* 的向下取整后的结果，如果失败，返回 *NULL*。等价于\"传统\"的整数除法。"

#: ../../c-api/number.rst:49
msgid ""
"Return a reasonable approximation for the mathematical value of *o1* divided"
" by *o2*, or *NULL* on failure.  The return value is \"approximate\" because"
" binary floating point numbers are approximate; it is not possible to "
"represent all real numbers in base two.  This function can return a floating"
" point value when passed two integers."
msgstr ""
"返回 *o1* 除以 *o2* 的一个合理的近似值，如果失败，返回 "
"*NULL*。这个值是近似的是因为二进制浮点数是一个近似值，它不可能表示出以2为基数的所有实数。这个函数返回两个整数相除得到的浮点数。"

#: ../../c-api/number.rst:58
msgid ""
"Returns the remainder of dividing *o1* by *o2*, or *NULL* on failure.  This "
"is the equivalent of the Python expression ``o1 % o2``."
msgstr "返回 *o1* 除以 *o2* 得到的余数，如果失败，返回 *NULL*。等价于Python中的表达式 ``o1 % o2``。"

#: ../../c-api/number.rst:66
msgid ""
"See the built-in function :func:`divmod`. Returns *NULL* on failure.  This "
"is the equivalent of the Python expression ``divmod(o1, o2)``."
msgstr ""
"参考内置函数 :func:`divmod`。如果失败，返回 *NULL*。等价于Python中的表达式 ``divmod(o1, o2)``。"

#: ../../c-api/number.rst:74
msgid ""
"See the built-in function :func:`pow`. Returns *NULL* on failure.  This is "
"the equivalent of the Python expression ``pow(o1, o2, o3)``, where *o3* is "
"optional. If *o3* is to be ignored, pass :c:data:`Py_None` in its place "
"(passing *NULL* for *o3* would cause an illegal memory access)."
msgstr ""
"请参阅内置函数 :func:`pow`。 如果失败，返回 *NULL*。 等价于 Python 中的表达式 ``pow(o1, o2, o3)``，其中"
" *o3* 是可选的。如果缺少 *o3*，则传入 :c:data:`Py_None` 作为代替（如果传入 *NULL* 会导致非法内存访问）。"

#: ../../c-api/number.rst:82
msgid ""
"Returns the negation of *o* on success, or *NULL* on failure. This is the "
"equivalent of the Python expression ``-o``."
msgstr "返回 *o* 的负值，如果失败，返回 *NULL* 。等价于Python中的表达式 ``-o``。"

#: ../../c-api/number.rst:88
msgid ""
"Returns *o* on success, or *NULL* on failure.  This is the equivalent of the"
" Python expression ``+o``."
msgstr "返回 *o* ，如果失败，返回 *NULL* 。等价于Python中的表达式 ``+o``。"

#: ../../c-api/number.rst:96
msgid ""
"Returns the absolute value of *o*, or *NULL* on failure.  This is the "
"equivalent of the Python expression ``abs(o)``."
msgstr "返回 ”o“ 的绝对值，如果失败，返回 *NULL*。等价于Python中的表达式 ``abs(o)``。"

#: ../../c-api/number.rst:102
msgid ""
"Returns the bitwise negation of *o* on success, or *NULL* on failure.  This "
"is the equivalent of the Python expression ``~o``."
msgstr "返回 *o* 的按位取反后的结果，如果失败，返回 *NULL* 。等价于Python中的表达式 ``~o``。"

#: ../../c-api/number.rst:108
msgid ""
"Returns the result of left shifting *o1* by *o2* on success, or *NULL* on "
"failure.  This is the equivalent of the Python expression ``o1 << o2``."
msgstr "返回 *o1* 左移 *o2* 个比特后的结果，如果失败，返回 *NULL* 。等价于Python中的表达式 ``o1 << o2``。"

#: ../../c-api/number.rst:114
msgid ""
"Returns the result of right shifting *o1* by *o2* on success, or *NULL* on "
"failure.  This is the equivalent of the Python expression ``o1 >> o2``."
msgstr "返回 *o1* 右移 *o2* 个比特后的结果，如果失败，返回 *NULL* 。等价于Python中的表达式 ``o1 >> o2``。"

#: ../../c-api/number.rst:120
msgid ""
"Returns the \"bitwise and\" of *o1* and *o2* on success and *NULL* on "
"failure. This is the equivalent of the Python expression ``o1 & o2``."
msgstr "返回 *o1* 和 *o2* “按位与”的结果，如果失败，返回 *NULL* 。等价于Python中的表达式 ``o1 & o2``。"

#: ../../c-api/number.rst:126
msgid ""
"Returns the \"bitwise exclusive or\" of *o1* by *o2* on success, or *NULL* "
"on failure.  This is the equivalent of the Python expression ``o1 ^ o2``."
msgstr "返回 *o1* 和 *o2* “按位异或”的结果，如果失败，返回 *NULL* 。等价于Python中的表达式 ``o1 ^ o2``。"

#: ../../c-api/number.rst:132
msgid ""
"Returns the \"bitwise or\" of *o1* and *o2* on success, or *NULL* on "
"failure. This is the equivalent of the Python expression ``o1 | o2``."
msgstr "返回 *o1* 和 *o2* “按位或”的结果，如果失败，返回 *NULL* 。等价于Python中的表达式 ``o1 | o2``"

#: ../../c-api/number.rst:138
msgid ""
"Returns the result of adding *o1* and *o2*, or *NULL* on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 += o2``."
msgstr ""
"返回 *o1* 、*o2*相加的结果，如果失败，返回 *NULL* 。当 *o1* 支持时，这个运算完成后将值赋给 *o1*。 "
"等价于Python中的语句 ``o1 += o2``。"

#: ../../c-api/number.rst:145
msgid ""
"Returns the result of subtracting *o2* from *o1*, or *NULL* on failure.  The"
" operation is done *in-place* when *o1* supports it.  This is the equivalent"
" of the Python statement ``o1 -= o2``."
msgstr ""
"返回 *o1* 减去 *o2*的结果，如果失败，返回 *NULL* 。当 *o1* 支持时，这个运算完成后将值赋给 *o1* 。 "
"等价于Python中的语句 ``o1 -= o2``。"

#: ../../c-api/number.rst:152
msgid ""
"Returns the result of multiplying *o1* and *o2*, or *NULL* on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 *= o2``."
msgstr ""
"返回 *o1* 、*o2*相乘的结果，如果失败，返回 *NULL* 。当 *o1* 支持时，这个运算完成后将值赋给 *o1*。 "
"等价于Python中的语句 ``o1 *= o2``。"

#: ../../c-api/number.rst:159
msgid ""
"Returns the result of matrix multiplication on *o1* and *o2*, or *NULL* on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 @= o2``."
msgstr ""
"返回 *o1* 、*o2*做矩阵乘法后的结果，如果失败，返回 *NULL* 。当 *o1* 支持时，这个运算完成后将值赋给 *o1*。 "
"等价于Python中的语句 ``o1 @= o2``。"

#: ../../c-api/number.rst:168
msgid ""
"Returns the mathematical floor of dividing *o1* by *o2*, or *NULL* on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 //= o2``."
msgstr ""
"返回 *o1* 除以 *o2* 后向下取整的结果，如果失败，返回 *NULL* 。当 *o1* 支持时，这个运算完成后将值赋给 *o1*。 "
"等价于Python中的语句 ``o1 //= o2``。"

#: ../../c-api/number.rst:175
msgid ""
"Return a reasonable approximation for the mathematical value of *o1* divided"
" by *o2*, or *NULL* on failure.  The return value is \"approximate\" because"
" binary floating point numbers are approximate; it is not possible to "
"represent all real numbers in base two.  This function can return a floating"
" point value when passed two integers.  The operation is done *in-place* "
"when *o1* supports it."
msgstr ""
"返回 *o1* 除以 *o2* 的一个合理的近似值，如果失败，返回 "
"*NULL*。这个值是近似的是因为二进制浮点数是一个近似值，它不可能表示出以2为基数的所有实数。这个函数返回两个整数相除得到的浮点数。当 *o1* "
"支持时，这个运算完成后将值赋给 *o1*."

#: ../../c-api/number.rst:184
msgid ""
"Returns the remainder of dividing *o1* by *o2*, or *NULL* on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 %= o2``."
msgstr ""
"返回 *o1* 除以 *o2* 得到的余数，如果失败，返回 *NULL* 。当 *o1* 支持时，这个运算完成后将值赋给 *o1*。 "
"等价于Python中的语句 ``o1 %= o2``。"

#: ../../c-api/number.rst:193
msgid ""
"See the built-in function :func:`pow`. Returns *NULL* on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 **= o2`` when o3 is :c:data:`Py_None`, or an "
"in-place variant of ``pow(o1, o2, o3)`` otherwise. If *o3* is to be ignored,"
" pass :c:data:`Py_None` in its place (passing *NULL* for *o3* would cause an"
" illegal memory access)."
msgstr ""

#: ../../c-api/number.rst:202
msgid ""
"Returns the result of left shifting *o1* by *o2* on success, or *NULL* on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 <<= o2``."
msgstr ""

#: ../../c-api/number.rst:209
msgid ""
"Returns the result of right shifting *o1* by *o2* on success, or *NULL* on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 >>= o2``."
msgstr ""

#: ../../c-api/number.rst:216
msgid ""
"Returns the \"bitwise and\" of *o1* and *o2* on success and *NULL* on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 &= o2``."
msgstr ""

#: ../../c-api/number.rst:223
msgid ""
"Returns the \"bitwise exclusive or\" of *o1* by *o2* on success, or *NULL* "
"on failure.  The operation is done *in-place* when *o1* supports it.  This "
"is the equivalent of the Python statement ``o1 ^= o2``."
msgstr ""

#: ../../c-api/number.rst:230
msgid ""
"Returns the \"bitwise or\" of *o1* and *o2* on success, or *NULL* on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 |= o2``."
msgstr ""

#: ../../c-api/number.rst:239
msgid ""
"Returns the *o* converted to an integer object on success, or *NULL* on "
"failure.  This is the equivalent of the Python expression ``int(o)``."
msgstr "返回 *o* 转换成整数类型的对象后的结果，如果失败，返回 *NULL* 。等价于Python中的表达式 ``int(o)``。"

#: ../../c-api/number.rst:247
msgid ""
"Returns the *o* converted to a float object on success, or *NULL* on "
"failure. This is the equivalent of the Python expression ``float(o)``."
msgstr "返回 *o* 转换成浮点数类型的对象后的结果，如果失败，返回 *NULL*。等价于Python中的表达式 ``float(o)``。"

#: ../../c-api/number.rst:253
msgid ""
"Returns the *o* converted to a Python int on success or *NULL* with a "
":exc:`TypeError` exception raised on failure."
msgstr ""

#: ../../c-api/number.rst:259
msgid ""
"Returns the integer *n* converted to base *base* as a string.  The *base* "
"argument must be one of 2, 8, 10, or 16.  For base 2, 8, or 16, the returned"
" string is prefixed with a base marker of ``'0b'``, ``'0o'``, or ``'0x'``, "
"respectively.  If *n* is not a Python int, it is converted with "
":c:func:`PyNumber_Index` first."
msgstr ""

#: ../../c-api/number.rst:268
msgid ""
"Returns *o* converted to a Py_ssize_t value if *o* can be interpreted as an "
"integer.  If the call fails, an exception is raised and ``-1`` is returned."
msgstr ""

#: ../../c-api/number.rst:271
msgid ""
"If *o* can be converted to a Python int but the attempt to convert to a "
"Py_ssize_t value would raise an :exc:`OverflowError`, then the *exc* "
"argument is the type of exception that will be raised (usually "
":exc:`IndexError` or :exc:`OverflowError`).  If *exc* is *NULL*, then the "
"exception is cleared and the value is clipped to *PY_SSIZE_T_MIN* for a "
"negative integer or *PY_SSIZE_T_MAX* for a positive integer."
msgstr ""

#: ../../c-api/number.rst:281
msgid ""
"Returns ``1`` if *o* is an index integer (has the nb_index slot of  the "
"tp_as_number structure filled in), and ``0`` otherwise. This function always"
" succeeds."
msgstr ""
