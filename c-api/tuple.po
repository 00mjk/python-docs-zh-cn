# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# dykai <yingkaidang@gmail.com>, 2019
# ppcfish <ppcfish@gmail.com>, 2019
# Freesand Leo <yuqinju@163.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-10-27 03:54+0000\n"
"PO-Revision-Date: 2019-09-01 03:40+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2019\n"
"Language-Team: Chinese (China) (https://www.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/tuple.rst:6
msgid "Tuple Objects"
msgstr "元组对象"

#: ../../c-api/tuple.rst:13
msgid "This subtype of :c:type:`PyObject` represents a Python tuple object."
msgstr "这个 :c:type:`PyObject` 的子类型代表一个 Python 的元组对象。"

#: ../../c-api/tuple.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python tuple type; it"
" is the same object as :class:`tuple` in the Python layer."
msgstr ""
":c:type:`PyTypeObject` 的实例代表一个 Python 元组类型，这与 Python 层面的 :class:`tuple` "
"是相同的对象。"

#: ../../c-api/tuple.rst:24
msgid ""
"Return true if *p* is a tuple object or an instance of a subtype of the "
"tuple type."
msgstr "如果 *p* 是一个元组对象或者元组类型的子类型的实例，则返回真值。"

#: ../../c-api/tuple.rst:30
msgid ""
"Return true if *p* is a tuple object, but not an instance of a subtype of "
"the tuple type."
msgstr "如果 *p* 是一个元组对象，而不是一个元组子类型的实例，则返回真值。"

#: ../../c-api/tuple.rst:36
msgid "Return a new tuple object of size *len*, or *NULL* on failure."
msgstr ""

#: ../../c-api/tuple.rst:41
msgid ""
"Return a new tuple object of size *n*, or *NULL* on failure. The tuple "
"values are initialized to the subsequent *n* C arguments pointing to Python "
"objects. ``PyTuple_Pack(2, a, b)`` is equivalent to "
"``Py_BuildValue(\"(OO)\", a, b)``."
msgstr ""

#: ../../c-api/tuple.rst:48
msgid "Take a pointer to a tuple object, and return the size of that tuple."
msgstr ""

#: ../../c-api/tuple.rst:53
msgid ""
"Return the size of the tuple *p*, which must be non-*NULL* and point to a "
"tuple; no error checking is performed."
msgstr ""

#: ../../c-api/tuple.rst:59
msgid ""
"Return the object at position *pos* in the tuple pointed to by *p*.  If "
"*pos* is out of bounds, return *NULL* and set an :exc:`IndexError` "
"exception."
msgstr ""

#: ../../c-api/tuple.rst:65
msgid "Like :c:func:`PyTuple_GetItem`, but does no checking of its arguments."
msgstr ""

#: ../../c-api/tuple.rst:70
msgid ""
"Return the slice of the tuple pointed to by *p* between *low* and *high*, or"
" *NULL* on failure.  This is the equivalent of the Python expression "
"``p[low:high]``.  Indexing from the end of the list is not supported."
msgstr ""

#: ../../c-api/tuple.rst:77
msgid ""
"Insert a reference to object *o* at position *pos* of the tuple pointed to "
"by *p*.  Return ``0`` on success.  If *pos* is out of bounds, return ``-1`` "
"and set an :exc:`IndexError` exception."
msgstr ""

#: ../../c-api/tuple.rst:83
msgid ""
"This function \"steals\" a reference to *o* and discards a reference to an "
"item already in the tuple at the affected position."
msgstr ""

#: ../../c-api/tuple.rst:89
msgid ""
"Like :c:func:`PyTuple_SetItem`, but does no error checking, and should "
"*only* be used to fill in brand new tuples."
msgstr ""

#: ../../c-api/tuple.rst:94
msgid ""
"This macro \"steals\" a reference to *o*, and, unlike "
":c:func:`PyTuple_SetItem`, does *not* discard a reference to any item that "
"is being replaced; any reference in the tuple at position *pos* will be "
"leaked."
msgstr ""

#: ../../c-api/tuple.rst:102
msgid ""
"Can be used to resize a tuple.  *newsize* will be the new length of the "
"tuple. Because tuples are *supposed* to be immutable, this should only be "
"used if there is only one reference to the object.  Do *not* use this if the"
" tuple may already be known to some other part of the code.  The tuple will "
"always grow or shrink at the end.  Think of this as destroying the old tuple"
" and creating a new one, only more efficiently.  Returns ``0`` on success. "
"Client code should never assume that the resulting value of ``*p`` will be "
"the same as before calling this function. If the object referenced by ``*p``"
" is replaced, the original ``*p`` is destroyed.  On failure, returns ``-1`` "
"and sets ``*p`` to *NULL*, and raises :exc:`MemoryError` or "
":exc:`SystemError`."
msgstr ""

#: ../../c-api/tuple.rst:116
msgid "Clear the free list. Return the total number of freed items."
msgstr "清空释放列表。 返回所释放的条目数。"

#: ../../c-api/tuple.rst:120
msgid "Struct Sequence Objects"
msgstr ""

#: ../../c-api/tuple.rst:122
msgid ""
"Struct sequence objects are the C equivalent of "
":func:`~collections.namedtuple` objects, i.e. a sequence whose items can "
"also be accessed through attributes. To create a struct sequence, you first "
"have to create a specific struct sequence type."
msgstr ""

#: ../../c-api/tuple.rst:129
msgid ""
"Create a new struct sequence type from the data in *desc*, described below. "
"Instances of the resulting type can be created with "
":c:func:`PyStructSequence_New`."
msgstr ""

#: ../../c-api/tuple.rst:135
msgid "Initializes a struct sequence type *type* from *desc* in place."
msgstr ""

#: ../../c-api/tuple.rst:140
msgid ""
"The same as ``PyStructSequence_InitType``, but returns ``0`` on success and "
"``-1`` on failure."
msgstr ""

#: ../../c-api/tuple.rst:148
msgid "Contains the meta information of a struct sequence type to create."
msgstr "包含要创建的结构序列类型的元信息。"

#: ../../c-api/tuple.rst:151 ../../c-api/tuple.rst:174
msgid "Field"
msgstr "域"

#: ../../c-api/tuple.rst:151 ../../c-api/tuple.rst:174
msgid "C Type"
msgstr "C 类型"

#: ../../c-api/tuple.rst:151 ../../c-api/tuple.rst:174
msgid "Meaning"
msgstr "含义"

#: ../../c-api/tuple.rst:153 ../../c-api/tuple.rst:176
msgid "``name``"
msgstr "``name``"

#: ../../c-api/tuple.rst:153 ../../c-api/tuple.rst:155
#: ../../c-api/tuple.rst:176 ../../c-api/tuple.rst:181
msgid "``const char *``"
msgstr "``const char *``"

#: ../../c-api/tuple.rst:153
msgid "name of the struct sequence type"
msgstr "结构序列类型的名称"

#: ../../c-api/tuple.rst:155 ../../c-api/tuple.rst:181
msgid "``doc``"
msgstr "``doc``"

#: ../../c-api/tuple.rst:155
msgid "pointer to docstring for the type or NULL to omit"
msgstr ""

#: ../../c-api/tuple.rst:158
msgid "``fields``"
msgstr "``fields``"

#: ../../c-api/tuple.rst:158
msgid "``PyStructSequence_Field *``"
msgstr "``PyStructSequence_Field *``"

#: ../../c-api/tuple.rst:158
msgid "pointer to *NULL*-terminated array with field names of the new type"
msgstr "指向以NULL结尾的数组的指针，其字段名称为新类型"

#: ../../c-api/tuple.rst:161
msgid "``n_in_sequence``"
msgstr "``n_in_sequence``"

#: ../../c-api/tuple.rst:161
msgid "``int``"
msgstr "``int``"

#: ../../c-api/tuple.rst:161
msgid "number of fields visible to the Python side (if used as tuple)"
msgstr ""

#: ../../c-api/tuple.rst:168
msgid ""
"Describes a field of a struct sequence. As a struct sequence is modeled as a"
" tuple, all fields are typed as :c:type:`PyObject\\*`.  The index in the "
":attr:`fields` array of the :c:type:`PyStructSequence_Desc` determines which"
" field of the struct sequence is described."
msgstr ""

#: ../../c-api/tuple.rst:176
msgid ""
"name for the field or *NULL* to end the list of named fields, set to "
"PyStructSequence_UnnamedField to leave unnamed"
msgstr ""

#: ../../c-api/tuple.rst:181
msgid "field docstring or *NULL* to omit"
msgstr ""

#: ../../c-api/tuple.rst:187
msgid "Special value for a field name to leave it unnamed."
msgstr ""

#: ../../c-api/tuple.rst:192
msgid ""
"Creates an instance of *type*, which must have been created with "
":c:func:`PyStructSequence_NewType`."
msgstr ""

#: ../../c-api/tuple.rst:198
msgid ""
"Return the object at position *pos* in the struct sequence pointed to by "
"*p*. No bounds checking is performed."
msgstr ""

#: ../../c-api/tuple.rst:204
msgid "Macro equivalent of :c:func:`PyStructSequence_GetItem`."
msgstr ""

#: ../../c-api/tuple.rst:209
msgid ""
"Sets the field at index *pos* of the struct sequence *p* to value *o*.  Like"
" :c:func:`PyTuple_SET_ITEM`, this should only be used to fill in brand new "
"instances."
msgstr ""

#: ../../c-api/tuple.rst:215 ../../c-api/tuple.rst:224
msgid "This function \"steals\" a reference to *o*."
msgstr ""

#: ../../c-api/tuple.rst:220
msgid "Macro equivalent of :c:func:`PyStructSequence_SetItem`."
msgstr ""
