# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# 刘士 <liushilive@outlook.com>, 2018
# Pandaaaa906 <ye.pandaaaa906@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-01 10:14+0900\n"
"PO-Revision-Date: 2017-02-16 17:33+0000\n"
"Last-Translator: Pandaaaa906 <ye.pandaaaa906@gmail.com>, 2019\n"
"Language-Team: Chinese (China) (https://www.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/bytearray.rst:6
msgid "Byte Array Objects"
msgstr "字节数组对象"

#: ../../c-api/bytearray.rst:13
msgid ""
"This subtype of :c:type:`PyObject` represents a Python bytearray object."
msgstr "此子类型：:c:type:`PyObject` 表示一个 Python bytearray 对象。"

#: ../../c-api/bytearray.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python bytearray "
"type; it is the same object as :class:`bytearray` in the Python layer."
msgstr ""
"Python bytearray 类型表示为 :c:type:`PyTypeObject` 的实例；这与Python层面的 "
":class:`bytearray` 是相同的对象。"

#: ../../c-api/bytearray.rst:23
msgid "Type check macros"
msgstr "类型检查宏"

#: ../../c-api/bytearray.rst:27
msgid ""
"Return true if the object *o* is a bytearray object or an instance of a "
"subtype of the bytearray type."
msgstr "当对象*o*是一个字节数组对象而且是一个字节数组类型的子类型实例时，返回真。"

#: ../../c-api/bytearray.rst:33
msgid ""
"Return true if the object *o* is a bytearray object, but not an instance of "
"a subtype of the bytearray type."
msgstr "当对象*o*是一个字节数组对象，但不是一个字节数组类型的子类型实例时，返回真。"

#: ../../c-api/bytearray.rst:38
msgid "Direct API functions"
msgstr ""

#: ../../c-api/bytearray.rst:42
msgid ""
"Return a new bytearray object from any object, *o*, that implements the "
":ref:`buffer protocol <bufferobjects>`."
msgstr "根据任何实现了:ref:`缓冲区协议<bufferobjects>`的对象，*o*，返回一个新的字节数组对象。"

#: ../../c-api/bytearray.rst:50
msgid ""
"Create a new bytearray object from *string* and its length, *len*.  On "
"failure, *NULL* is returned."
msgstr "根据*string*和它的长度*len*生成一个字节数组对象。当失败时，返回*NULL*。"

#: ../../c-api/bytearray.rst:56
msgid ""
"Concat bytearrays *a* and *b* and return a new bytearray with the result."
msgstr "连接字节数组*a*和*b*并返回一个带有结果的新的字节数组。"

#: ../../c-api/bytearray.rst:61
msgid "Return the size of *bytearray* after checking for a *NULL* pointer."
msgstr "在检查*NULL*指针后返回*bytearray*的大小。"

#: ../../c-api/bytearray.rst:66
msgid ""
"Return the contents of *bytearray* as a char array after checking for a "
"*NULL* pointer.  The returned array always has an extra null byte appended."
msgstr ""

#: ../../c-api/bytearray.rst:73
msgid "Resize the internal buffer of *bytearray* to *len*."
msgstr "将*bytearray*的内部缓冲区的大小调整为*len*。"

#: ../../c-api/bytearray.rst:76
msgid "Macros"
msgstr "宏"

#: ../../c-api/bytearray.rst:78
msgid "These macros trade safety for speed and they don't check pointers."
msgstr ""

#: ../../c-api/bytearray.rst:82
msgid "Macro version of :c:func:`PyByteArray_AsString`."
msgstr ""

#: ../../c-api/bytearray.rst:87
msgid "Macro version of :c:func:`PyByteArray_Size`."
msgstr ""
