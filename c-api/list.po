# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Ming Jia <616896512@qq.com>, 2019
# Pandaaaa906 <ye.pandaaaa906@gmail.com>, 2019
# Freesand Leo <yuqinju@163.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-07 11:52+0900\n"
"PO-Revision-Date: 2019-09-01 03:40+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2019\n"
"Language-Team: Chinese (China) (https://www.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/list.rst:6
msgid "List Objects"
msgstr "列表对象"

#: ../../c-api/list.rst:13
msgid "This subtype of :c:type:`PyObject` represents a Python list object."
msgstr "这个C类型 :c:type:`PyObject` 的子类型代表一个Python列表对象。"

#: ../../c-api/list.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python list type. "
"This is the same object as :class:`list` in the Python layer."
msgstr ""
"这是个属于 :c:type:`PyTypeObject` 的代表Python列表类型的实例。在Python层面和类型 :class:`list` "
"是同一个对象。"

#: ../../c-api/list.rst:24
msgid ""
"Return true if *p* is a list object or an instance of a subtype of the list "
"type."
msgstr "如果 *p* 是一个列表对象或者是一个列表类型的子类型实例时，返回真。"

#: ../../c-api/list.rst:30
msgid ""
"Return true if *p* is a list object, but not an instance of a subtype of the"
" list type."
msgstr "当 *p* 是一个列表对象，但是不是列表类型的子类型实例时，返回真。"

#: ../../c-api/list.rst:36
msgid "Return a new list of length *len* on success, or *NULL* on failure."
msgstr "成功时返回长度为 *len* 的新列表，失败时返回 *NULL*。"

#: ../../c-api/list.rst:40
msgid ""
"If *len* is greater than zero, the returned list object's items are set to "
"``NULL``.  Thus you cannot use abstract API functions such as "
":c:func:`PySequence_SetItem`  or expose the object to Python code before "
"setting all items to a real object with :c:func:`PyList_SetItem`."
msgstr ""
"当 *len* 大于零时，被返回的列表对象项目被设成 ``NULL``。因此你不能用类似C函数 :c:func:`PySequence_SetItem`"
" 的抽象API或者用C函数 :c:func:`PyList_SetItem` 将所有项目设置成真实对象前对Python代码公开这个对象。"

#: ../../c-api/list.rst:50
msgid ""
"Return the length of the list object in *list*; this is equivalent to "
"``len(list)`` on a list object."
msgstr "返回 *list* 中列表对象的长度；这等于在列表对象调用 ``len(list)`` 。"

#: ../../c-api/list.rst:56
msgid "Macro form of :c:func:`PyList_Size` without error checking."
msgstr "宏版本的C函数 :c:func:`PyList_Size` ，没有错误检测。"

#: ../../c-api/list.rst:61
msgid ""
"Return the object at position *index* in the list pointed to by *list*.  The"
" position must be non-negative; indexing from the end of the list is not "
"supported.  If *index* is out of bounds (<0 or >=len(list)), return *NULL* "
"and set an :exc:`IndexError` exception."
msgstr ""

#: ../../c-api/list.rst:69
msgid "Macro form of :c:func:`PyList_GetItem` without error checking."
msgstr "宏版本的C函数 :c:func:`PyList_GetItem` ，没有错误检测。"

#: ../../c-api/list.rst:74
msgid ""
"Set the item at index *index* in list to *item*.  Return ``0`` on success or"
" ``-1`` on failure."
msgstr "将列表中索引为 *index* 的对象设为 *item*。成功时返回 ``0`` ，失败时返回 ``-1`` 。"

#: ../../c-api/list.rst:79
msgid ""
"This function \"steals\" a reference to *item* and discards a reference to "
"an item already in the list at the affected position."
msgstr ""

#: ../../c-api/list.rst:85
msgid ""
"Macro form of :c:func:`PyList_SetItem` without error checking. This is "
"normally only used to fill in new lists where there is no previous content."
msgstr ""

#: ../../c-api/list.rst:90
msgid ""
"This macro \"steals\" a reference to *item*, and, unlike "
":c:func:`PyList_SetItem`, does *not* discard a reference to any item that is"
" being replaced; any reference in *list* at position *i* will be leaked."
msgstr ""

#: ../../c-api/list.rst:98
msgid ""
"Insert the item *item* into list *list* in front of index *index*.  Return "
"``0`` if successful; return ``-1`` and set an exception if unsuccessful. "
"Analogous to ``list.insert(index, item)``."
msgstr ""

#: ../../c-api/list.rst:105
msgid ""
"Append the object *item* at the end of list *list*. Return ``0`` if "
"successful; return ``-1`` and set an exception if unsuccessful.  Analogous "
"to ``list.append(item)``."
msgstr ""

#: ../../c-api/list.rst:112
msgid ""
"Return a list of the objects in *list* containing the objects *between* "
"*low* and *high*.  Return *NULL* and set an exception if unsuccessful.  "
"Analogous to ``list[low:high]``.  Negative indices, as when slicing from "
"Python, are not supported."
msgstr ""

#: ../../c-api/list.rst:120
msgid ""
"Set the slice of *list* between *low* and *high* to the contents of "
"*itemlist*.  Analogous to ``list[low:high] = itemlist``. The *itemlist* may "
"be *NULL*, indicating the assignment of an empty list (slice deletion). "
"Return ``0`` on success, ``-1`` on failure.  Negative indices, as when "
"slicing from Python, are not supported."
msgstr ""

#: ../../c-api/list.rst:129
msgid ""
"Sort the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is equivalent to ``list.sort()``."
msgstr ""

#: ../../c-api/list.rst:135
msgid ""
"Reverse the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is the equivalent of ``list.reverse()``."
msgstr ""

#: ../../c-api/list.rst:143
msgid ""
"Return a new tuple object containing the contents of *list*; equivalent to "
"``tuple(list)``."
msgstr ""

#: ../../c-api/list.rst:149
msgid "Clear the free list. Return the total number of freed items."
msgstr "清空释放列表。 返回所释放的条目数。"
