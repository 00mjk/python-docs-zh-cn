# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# cdarlint <cdarling@126.com>, 2019
# Freesand Leo <yuqinju@163.com>, 2019
# Pandaaaa906 <ye.pandaaaa906@gmail.com>, 2019
# Siyuan Xu <mf20070535@126.com>, 2019
# 1lin24 <1lin24@sina.com>, 2019
# ppcfish <ppcfish@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-16 04:24+0000\n"
"PO-Revision-Date: 2019-09-01 02:41+0000\n"
"Last-Translator: ppcfish <ppcfish@gmail.com>, 2019\n"
"Language-Team: Chinese (China) (https://www.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:5
msgid "Creating Built Distributions"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:7
msgid ""
"A \"built distribution\" is what you're probably used to thinking of either "
"as a \"binary package\" or an \"installer\" (depending on your background)."
"  It's not necessarily binary, though, because it might contain only Python "
"source code and/or byte-code; and we don't call it a package, because that "
"word is already spoken for in Python.  (And \"installer\" is a term specific"
" to the world of mainstream desktop systems.)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:14
msgid ""
"A built distribution is how you make life as easy as possible for installers"
" of your module distribution: for users of RPM-based Linux systems, it's a "
"binary RPM; for Windows users, it's an executable installer; for Debian-"
"based Linux users, it's a Debian package; and so forth.  Obviously, no one "
"person will be able to create built distributions for every platform under "
"the sun, so the Distutils are designed to enable module developers to "
"concentrate on their specialty---writing code and creating source "
"distributions---while an intermediary species called *packagers* springs up "
"to turn source distributions into built distributions for as many platforms "
"as there are packagers."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:24
msgid ""
"Of course, the module developer could be their own packager; or the packager"
" could be a volunteer \"out there\" somewhere who has access to a platform "
"which the original developer does not; or it could be software periodically "
"grabbing new source distributions and turning them into built distributions "
"for as many platforms as the software has access to.  Regardless of who they"
" are, a packager uses the setup script and the :command:`bdist` command "
"family to generate built distributions."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:32
msgid ""
"As a simple example, if I run the following command in the Distutils source "
"tree::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:37
msgid ""
"then the Distutils builds my module distribution (the Distutils itself in "
"this case), does a \"fake\" installation (also in the :file:`build` "
"directory), and creates the default type of built distribution for my "
"platform.  The default format for built distributions is a \"dumb\" tar file"
" on Unix, and a simple executable installer on Windows.  (That tar file is "
"considered \"dumb\" because it has to be unpacked in a specific location to "
"work.)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:44
msgid ""
"Thus, the above command on a Unix system creates "
":file:`Distutils-1.0.{plat}.tar.gz`; unpacking this tarball from the right "
"place installs the Distutils just as though you had downloaded the source "
"distribution and run ``python setup.py install``.  (The \"right place\" is "
"either the root of the filesystem or  Python's :file:`{prefix}` directory, "
"depending on the options given to the :command:`bdist_dumb` command; the "
"default is to make dumb distributions relative to :file:`{prefix}`.)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:52
msgid ""
"Obviously, for pure Python distributions, this isn't any simpler than just "
"running ``python setup.py install``\\ ---but for non-pure distributions, "
"which include extensions that would need to be compiled, it can mean the "
"difference between someone being able to use your extensions or not.  And "
"creating \"smart\" built distributions, such as an RPM package or an "
"executable installer for Windows, is far more convenient for users even if "
"your distribution doesn't include any extensions."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:60
msgid ""
"The :command:`bdist` command has a :option:`!--formats` option, similar to "
"the :command:`sdist` command, which you can use to select the types of built"
" distribution to generate: for example, ::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:66
msgid ""
"would, when run on a Unix system, create :file:`Distutils-1.0.{plat}.zip`\\ "
"---again, this archive would be unpacked from the root directory to install "
"the Distutils."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:70
msgid "The available formats for built distributions are:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:73
msgid "Format"
msgstr "格式"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:73
msgid "Description"
msgstr "描述"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:73
msgid "Notes"
msgstr "注释"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:75
msgid "``gztar``"
msgstr "``gztar``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:75
msgid "gzipped tar file (:file:`.tar.gz`)"
msgstr "gzipped tar 文件 (:file:`.tar.gz`)"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:75
msgid "\\(1)"
msgstr "\\(1)"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:78
msgid "``bztar``"
msgstr "``bztar``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:78
msgid "bzipped tar file (:file:`.tar.bz2`)"
msgstr "bzipped tar 文件 (:file:`.tar.bz2`)"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:81
msgid "``xztar``"
msgstr "``xztar``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:81
msgid "xzipped tar file (:file:`.tar.xz`)"
msgstr "xzipped tar 文件 (:file:`.tar.xz`)"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:84
msgid "``ztar``"
msgstr "``ztar``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:84
msgid "compressed tar file (:file:`.tar.Z`)"
msgstr "压缩 tar 文件 (:file:`.tar.Z`)"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:84
msgid "\\(3)"
msgstr "\\(3)"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:87
msgid "``tar``"
msgstr "``tar``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:87
msgid "tar file (:file:`.tar`)"
msgstr "tar 文件 (:file:`.tar`)"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:89
msgid "``zip``"
msgstr "``zip``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:89
msgid "zip file (:file:`.zip`)"
msgstr "zip 文件 (:file:`.zip`)"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:89
msgid "(2),(4)"
msgstr "(2),(4)"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:91
msgid "``rpm``"
msgstr "``rpm``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:91
msgid "RPM"
msgstr "RPM"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:91
msgid "\\(5)"
msgstr "\\(5)"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:93
msgid "``pkgtool``"
msgstr "``pkgtool``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:93
msgid "Solaris :program:`pkgtool`"
msgstr "Solaris :program:`pkgtool`"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:95
msgid "``sdux``"
msgstr "``sdux``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:95
msgid "HP-UX :program:`swinstall`"
msgstr "HP-UX :program:`swinstall`"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:97
msgid "``wininst``"
msgstr "``wininst``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:97
msgid "self-extracting ZIP file for Windows"
msgstr "Windows的自解压ZIP文件"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:97
msgid "\\(4)"
msgstr "\\(4)"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:100
msgid "``msi``"
msgstr "``msi``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:100
msgid "Microsoft Installer."
msgstr "Microsoft安装程序。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:103
msgid "Added support for the ``xztar`` format."
msgstr "添加了对 ``xztar`` 格式的支持"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:107
msgid "Notes:"
msgstr "注释:"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:110
msgid "default on Unix"
msgstr "默认 Unix"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:113
msgid "default on Windows"
msgstr "默认Windows"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:116
msgid "requires external :program:`compress` utility."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:119
msgid ""
"requires either external :program:`zip` utility or :mod:`zipfile` module "
"(part of the standard Python library since Python 1.6)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:123
msgid ""
"requires external :program:`rpm` utility, version 3.0.4 or better (use ``rpm"
" --version`` to find out which version you have)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:126
msgid ""
"You don't have to use the :command:`bdist` command with the :option:`!--"
"formats` option; you can also use the command that directly implements the "
"format you're interested in.  Some of these :command:`bdist` \"sub-"
"commands\" actually generate several similar formats; for instance, the "
":command:`bdist_dumb` command generates all the \"dumb\" archive formats "
"(``tar``, ``gztar``, ``bztar``, ``xztar``, ``ztar``, and ``zip``), and "
":command:`bdist_rpm` generates both binary and source RPMs.  The "
":command:`bdist` sub-commands, and the formats generated by each, are:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:136
msgid "Command"
msgstr "命令"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:136
msgid "Formats"
msgstr "格式"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:138
msgid ":command:`bdist_dumb`"
msgstr ":command:`bdist_dumb`"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:138
msgid "tar, gztar, bztar, xztar, ztar, zip"
msgstr "tar, gztar, bztar, xztar, ztar, zip"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:140
msgid ":command:`bdist_rpm`"
msgstr ":command:`bdist_rpm`"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:140
msgid "rpm, srpm"
msgstr "rpm, srpm"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:142
msgid ":command:`bdist_wininst`"
msgstr ":command:`bdist_wininst`"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:142
msgid "wininst"
msgstr "wininst"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:144
msgid ":command:`bdist_msi`"
msgstr ":command:`bdist_msi`"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:144
msgid "msi"
msgstr "msi"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:147
msgid ""
"The following sections give details on the individual :command:`bdist_\\*` "
"commands."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:163
msgid "Creating RPM packages"
msgstr "创建RPM软件包"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:165
msgid ""
"The RPM format is used by many popular Linux distributions, including Red "
"Hat, SuSE, and Mandrake.  If one of these (or any of the other RPM-based "
"Linux distributions) is your usual environment, creating RPM packages for "
"other users of that same distribution is trivial. Depending on the "
"complexity of your module distribution and differences between Linux "
"distributions, you may also be able to create RPMs that work on different "
"RPM-based distributions."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:172
msgid ""
"The usual way to create an RPM of your module distribution is to run the "
":command:`bdist_rpm` command::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:177
msgid "or the :command:`bdist` command with the :option:`!--format` option::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:181
msgid ""
"The former allows you to specify RPM-specific options; the latter allows  "
"you to easily specify multiple formats in one run.  If you need to do both, "
"you can explicitly specify multiple :command:`bdist_\\*` commands and their "
"options::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:188
msgid ""
"Creating RPM packages is driven by a :file:`.spec` file, much as using the "
"Distutils is driven by the setup script.  To make your life easier, the "
":command:`bdist_rpm` command normally creates a :file:`.spec` file based on "
"the information you supply in the setup script, on the command line, and in "
"any Distutils configuration files.  Various options and sections in the "
":file:`.spec` file are derived from options in the setup script as follows:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:196
#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:220
msgid "RPM :file:`.spec` file option or section"
msgstr "RPM :file:`.spec` 文件配置或选项"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:196
msgid "Distutils setup script option"
msgstr "Distutils安装脚本选项"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:198
msgid "Name"
msgstr "名称"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:198
msgid "``name``"
msgstr "``name``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:200
msgid "Summary (in preamble)"
msgstr "摘要（在序言中）"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:200
msgid "``description``"
msgstr "``description``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:202
msgid "Version"
msgstr "版本"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:202
msgid "``version``"
msgstr "``version``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:204
#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:227
msgid "Vendor"
msgstr "供应商"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:204
msgid ""
"``author`` and ``author_email``, or  --- & ``maintainer`` and "
"``maintainer_email``"
msgstr ""
"``author`` 和 ``author_email``, 或 --- & ``maintainer`` 和 ``maintainer_email``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:208
msgid "Copyright"
msgstr "Copyright"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:208
msgid "``license``"
msgstr "``license``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:210
msgid "Url"
msgstr "Url"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:210
msgid "``url``"
msgstr "``url``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:212
msgid "%description (section)"
msgstr "%d描述（部分）"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:212
msgid "``long_description``"
msgstr "``long_description``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:215
msgid ""
"Additionally, there are many options in :file:`.spec` files that don't have "
"corresponding options in the setup script.  Most of these are handled "
"through options to the :command:`bdist_rpm` command as follows:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:220
msgid ":command:`bdist_rpm` option"
msgstr ":command:`bdist_rpm` 选项"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:220
msgid "default value"
msgstr "默认值"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:223
msgid "Release"
msgstr "发布版本"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:223
msgid "``release``"
msgstr "``release``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:223
msgid "\"1\""
msgstr "\"1\""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:225
msgid "Group"
msgstr "组"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:225
msgid "``group``"
msgstr "``group``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:225
msgid "\"Development/Libraries\""
msgstr "\"Development/Libraries\""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:227
msgid "``vendor``"
msgstr "``vendor``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:227
msgid "(see above)"
msgstr "（同上）"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:229
msgid "Packager"
msgstr "打包"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:229
msgid "``packager``"
msgstr "``packager``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:229
#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:231
#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:233
#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:235
#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:237
#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:239
#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:241
#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:243
msgid "(none)"
msgstr "(none)"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:231
msgid "Provides"
msgstr "提供"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:231
msgid "``provides``"
msgstr "``provides``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:233
msgid "Requires"
msgstr "需求"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:233
msgid "``requires``"
msgstr "``requires``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:235
msgid "Conflicts"
msgstr "冲突"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:235
msgid "``conflicts``"
msgstr "``conflicts``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:237
msgid "Obsoletes"
msgstr "淘汰"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:237
msgid "``obsoletes``"
msgstr "``obsoletes``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:239
msgid "Distribution"
msgstr " 发行"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:239
msgid "``distribution_name``"
msgstr "``distribution_name``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:241
msgid "BuildRequires"
msgstr "构建要求"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:241
msgid "``build_requires``"
msgstr "``build_requires``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:243
msgid "Icon"
msgstr "Icon"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:243
msgid "``icon``"
msgstr "``icon``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:246
msgid ""
"Obviously, supplying even a few of these options on the command-line would "
"be tedious and error-prone, so it's usually best to put them in the setup "
"configuration file, :file:`setup.cfg`\\ ---see section :ref:`setup-config`."
"  If you distribute or package many Python module distributions, you might "
"want to put options that apply to all of them in your personal Distutils "
"configuration file (:file:`~/.pydistutils.cfg`).  If you want to temporarily"
" disable this file, you can pass the :option:`!--no-user-cfg` option to "
":file:`setup.py`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:254
msgid ""
"There are three steps to building a binary RPM package, all of which are "
"handled automatically by the Distutils:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:257
msgid ""
"create a :file:`.spec` file, which describes the package (analogous  to the "
"Distutils setup script; in fact, much of the information in the  setup "
"script winds up in the :file:`.spec` file)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:261
msgid "create the source RPM"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:263
msgid ""
"create the \"binary\" RPM (which may or may not contain binary code, "
"depending on whether your module distribution contains Python extensions)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:266
msgid ""
"Normally, RPM bundles the last two steps together; when you use the "
"Distutils, all three steps are typically bundled together."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:269
msgid ""
"If you wish, you can separate these three steps.  You can use the :option"
":`!--spec-only` option to make :command:`bdist_rpm` just create the "
":file:`.spec` file and exit; in this case, the :file:`.spec` file will be "
"written to the \"distribution directory\"---normally :file:`dist/`, but "
"customizable with the :option:`!--dist-dir` option.  (Normally, the "
":file:`.spec` file winds up deep in the \"build tree,\" in a temporary "
"directory created by :command:`bdist_rpm`.)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:297
msgid "Creating Windows Installers"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:299
msgid ""
"Executable installers are the natural format for binary distributions on "
"Windows.  They display a nice graphical user interface, display some "
"information about the module distribution to be installed taken from the "
"metadata in the setup script, let the user select a few options, and start "
"or cancel the installation."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:305
msgid ""
"Since the metadata is taken from the setup script, creating Windows "
"installers is usually as easy as running::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:310
msgid "or the :command:`bdist` command with the :option:`!--formats` option::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:314
msgid ""
"If you have a pure module distribution (only containing pure Python modules "
"and packages), the resulting installer will be version independent and have "
"a name like :file:`foo-1.0.win32.exe`. Note that creating ``wininst`` binary"
" distributions in only supported on Windows systems."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:319
msgid ""
"If you have a non-pure distribution, the extensions can only be created on a"
" Windows platform, and will be Python version dependent. The installer "
"filename will reflect this and now has the form "
":file:`foo-1.0.win32-py2.0.exe`.  You have to create a separate installer "
"for every Python version you want to support."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:325
msgid ""
"The installer will try to compile pure modules into :term:`bytecode` after "
"installation on the target system in normal and optimizing mode.  If you "
"don't want this to happen for some reason, you can run the "
":command:`bdist_wininst` command with the :option:`!--no-target-compile` "
"and/or the :option:`!--no-target-optimize` option."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:331
msgid ""
"By default the installer will display the cool \"Python Powered\" logo when "
"it is run, but you can also supply your own 152x261 bitmap which must be a "
"Windows :file:`.bmp` file with the :option:`!--bitmap` option."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:335
msgid ""
"The installer will also display a large title on the desktop background "
"window when it is run, which is constructed from the name of your "
"distribution and the version number.  This can be changed to another text by"
" using the :option:`!--title` option."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:340
msgid ""
"The installer file will be written to the \"distribution directory\" --- "
"normally :file:`dist/`, but customizable with the :option:`!--dist-dir` "
"option."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:346
msgid "Cross-compiling on Windows"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:348
msgid ""
"Starting with Python 2.6, distutils is capable of cross-compiling between "
"Windows platforms.  In practice, this means that with the correct tools "
"installed, you can use a 32bit version of Windows to create 64bit extensions"
" and vice-versa."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:353
msgid ""
"To build for an alternate platform, specify the :option:`!--plat-name` "
"option to the build command.  Valid values are currently 'win32', and  'win-"
"amd64'. For example, on a 32bit version of Windows, you could execute::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:359
msgid ""
"to build a 64bit version of your extension.  The Windows Installers also "
"support this option, so the command::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:364
msgid ""
"would create a 64bit installation executable on your 32bit version of "
"Windows."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:366
msgid ""
"To cross-compile, you must download the Python source code and cross-compile"
" Python itself for the platform you are targeting - it is not possible from "
"a binary installation of Python (as the .lib etc file for other platforms "
"are not included.)  In practice, this means the user of a 32 bit operating "
"system will need to use Visual Studio 2008 to open the "
":file:`PCbuild/PCbuild.sln` solution in the Python source tree and build the"
" \"x64\" configuration of the 'pythoncore' project before cross-compiling "
"extensions is possible."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:375
msgid ""
"Note that by default, Visual Studio 2008 does not install 64bit compilers or"
" tools.  You may need to reexecute the Visual Studio setup process and "
"select these tools (using Control Panel->[Add/Remove] Programs is a "
"convenient way to check or modify your existing install.)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:383
msgid "The Postinstallation script"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:385
msgid ""
"Starting with Python 2.3, a postinstallation script can be specified with "
"the :option:`!--install-script` option.  The basename of the script must be "
"specified, and the script filename must also be listed in the scripts "
"argument to the setup function."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:390
msgid ""
"This script will be run at installation time on the target system after all "
"the files have been copied, with ``argv[1]`` set to :option:`!-install`, and"
" again at uninstallation time before the files are removed with ``argv[1]`` "
"set to :option:`!-remove`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:395
msgid ""
"The installation script runs embedded in the windows installer, every output"
" (``sys.stdout``, ``sys.stderr``) is redirected into a buffer and will be "
"displayed in the GUI after the script has finished."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:399
msgid ""
"Some functions especially useful in this context are available as additional"
" built-in functions in the installation script."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:406
msgid ""
"These functions should be called when a directory or file is created by the "
"postinstall script at installation time.  It will register *path* with the "
"uninstaller, so that it will be removed when the distribution is "
"uninstalled. To be safe, directories are only removed if they are empty."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:414
msgid ""
"This function can be used to retrieve special folder locations on Windows "
"like the Start Menu or the Desktop.  It returns the full path to the folder."
" *csidl_string* must be one of the following strings::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:434
msgid "If the folder cannot be retrieved, :exc:`OSError` is raised."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:436
msgid ""
"Which folders are available depends on the exact Windows version, and "
"probably also the configuration.  For details refer to Microsoft's "
"documentation of the :c:func:`SHGetSpecialFolderPath` function."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:443
msgid ""
"This function creates a shortcut. *target* is the path to the program to be "
"started by the shortcut. *description* is the description of the shortcut. "
"*filename* is the title of the shortcut that the user will see. *arguments* "
"specifies the command line arguments, if any. *workdir* is the working "
"directory for the program. *iconpath* is the file containing the icon for "
"the shortcut, and *iconindex* is the index of the icon in the file "
"*iconpath*.  Again, for details consult the Microsoft documentation for the "
":class:`IShellLink` interface."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:454
msgid "Vista User Access Control (UAC)"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/distutils/builtdist.rst:456
msgid ""
"Starting with Python 2.6, bdist_wininst supports a :option:`!--user-access-"
"control` option.  The default is 'none' (meaning no UAC handling is done), "
"and other valid values are 'auto' (meaning prompt for UAC elevation if "
"Python was installed for all users) and 'force' (meaning always prompt for "
"elevation)."
msgstr ""
