# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Jack Wu <bitlabwzh@gmail.com>, 2019
# Zombie110year <zombie110year@gmail.com>, 2019
# nick <2330458484@qq.com>, 2019
# Makdon <makdon@makdon.me>, 2019
# ppcfish <ppcfish@gmail.com>, 2019
# Freesand Leo <yuqinju@163.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-10 04:47+0000\n"
"PO-Revision-Date: 2019-09-01 03:24+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2020\n"
"Language-Team: Chinese (China) (https://www.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/tarfile.rst:2
msgid ":mod:`tarfile` --- Read and write tar archive files"
msgstr ":mod:`tarfile` --- 读写tar归档文件"

#: ../../library/tarfile.rst:10
msgid "**Source code:** :source:`Lib/tarfile.py`"
msgstr "**源代码:** :source:`Lib/tarfile.py`"

#: ../../library/tarfile.rst:14
msgid ""
"The :mod:`tarfile` module makes it possible to read and write tar archives, "
"including those using gzip, bz2 and lzma compression. Use the :mod:`zipfile`"
" module to read or write :file:`.zip` files, or the higher-level functions "
"in :ref:`shutil <archiving-operations>`."
msgstr ""
":mod:`tarfile` 模块可以用来读写 tar 归档，包括使用 gzip, bz2 和 lzma 压缩的归档。 请使用 "
":mod:`zipfile` 模块来读写 :file:`.zip` 文件，或者使用 :ref:`shutil <archiving-"
"operations>` 的高层级函数。"

#: ../../library/tarfile.rst:19
msgid "Some facts and figures:"
msgstr "一些事实和数字:"

#: ../../library/tarfile.rst:21
msgid ""
"reads and writes :mod:`gzip`, :mod:`bz2` and :mod:`lzma` compressed archives"
" if the respective modules are available."
msgstr "读写 :mod:`gzip`, :mod:`bz2` 和 :mod:`lzma` 解压的归档要求相应的模块可用。"

#: ../../library/tarfile.rst:24
msgid "read/write support for the POSIX.1-1988 (ustar) format."
msgstr "支持读取 / 写入 POSIX.1-1988 (ustar) 格式。"

#: ../../library/tarfile.rst:26
msgid ""
"read/write support for the GNU tar format including *longname* and "
"*longlink* extensions, read-only support for all variants of the *sparse* "
"extension including restoration of sparse files."
msgstr ""
"对 GNU tar 格式的读/写支持，包括 *longname* 和 *longlink* 扩展，对所有种类 *sparse* 扩展的只读支持，包括 "
"sparse 文件的恢复。"

#: ../../library/tarfile.rst:30
msgid "read/write support for the POSIX.1-2001 (pax) format."
msgstr "对 POSIX.1-2001 (pax) 格式的读/写支持。"

#: ../../library/tarfile.rst:32
msgid ""
"handles directories, regular files, hardlinks, symbolic links, fifos, "
"character devices and block devices and is able to acquire and restore file "
"information like timestamp, access permissions and owner."
msgstr "处理目录、正常文件、硬链接、符号链接、fifo 管道、字符设备和块设备，并且能够获取和恢复文件信息例如时间戳、访问权限和所有者等。"

#: ../../library/tarfile.rst:36
msgid "Added support for :mod:`lzma` compression."
msgstr "添加了对 :mod:`lzma` 压缩的支持。"

#: ../../library/tarfile.rst:42
msgid ""
"Return a :class:`TarFile` object for the pathname *name*. For detailed "
"information on :class:`TarFile` objects and the keyword arguments that are "
"allowed, see :ref:`tarfile-objects`."
msgstr ""
"针对路径名 *name* 返回 :class:`TarFile` 对象。 有关 :class:`TarFile` "
"对象以及所允许的关键字参数的详细信息请参阅 :ref:`tarfile-objects`。"

#: ../../library/tarfile.rst:46
msgid ""
"*mode* has to be a string of the form ``'filemode[:compression]'``, it "
"defaults to ``'r'``. Here is a full list of mode combinations:"
msgstr ""
"*mode* 必须是 ``'filemode[:compression]'`` 形式的字符串，其默认值为 ``'r'``。 以下是模式组合的完整列表:"

#: ../../library/tarfile.rst:50
msgid "mode"
msgstr "模式"

#: ../../library/tarfile.rst:50
msgid "action"
msgstr "action"

#: ../../library/tarfile.rst:52
msgid "``'r' or 'r:*'``"
msgstr "``'r' or 'r:*'``"

#: ../../library/tarfile.rst:52
msgid "Open for reading with transparent compression (recommended)."
msgstr "打开和读取使用透明压缩（推荐）。"

#: ../../library/tarfile.rst:55
msgid "``'r:'``"
msgstr "``'r:'``"

#: ../../library/tarfile.rst:55
msgid "Open for reading exclusively without compression."
msgstr "打开和读取不使用压缩。"

#: ../../library/tarfile.rst:58
msgid "``'r:gz'``"
msgstr "``'r:gz'``"

#: ../../library/tarfile.rst:58
msgid "Open for reading with gzip compression."
msgstr "打开和读取使用gzip 压缩。"

#: ../../library/tarfile.rst:60
msgid "``'r:bz2'``"
msgstr "``'r:bz2'``"

#: ../../library/tarfile.rst:60
msgid "Open for reading with bzip2 compression."
msgstr "打开和读取使用bzip2 压缩。"

#: ../../library/tarfile.rst:62
msgid "``'r:xz'``"
msgstr "``'r:xz'``"

#: ../../library/tarfile.rst:62
msgid "Open for reading with lzma compression."
msgstr "打开和读取使用lzma 压缩。"

#: ../../library/tarfile.rst:64
msgid "``'x'`` or ``'x:'``"
msgstr "``'x'`` or ``'x:'``"

#: ../../library/tarfile.rst:64
msgid ""
"Create a tarfile exclusively without compression. Raise an "
":exc:`FileExistsError` exception if it already exists."
msgstr "创建tarfile不进行压缩。如果文件已经存在，则抛出 :exc:`FileExistsError` 异常。"

#: ../../library/tarfile.rst:69
msgid "``'x:gz'``"
msgstr "``'x:gz'``"

#: ../../library/tarfile.rst:69
msgid ""
"Create a tarfile with gzip compression. Raise an :exc:`FileExistsError` "
"exception if it already exists."
msgstr "使用gzip压缩创建tarfile。如果文件已经存在，则抛出 :exc:`FileExistsError` 异常。"

#: ../../library/tarfile.rst:73
msgid "``'x:bz2'``"
msgstr "``'x:bz2'``"

#: ../../library/tarfile.rst:73
msgid ""
"Create a tarfile with bzip2 compression. Raise an :exc:`FileExistsError` "
"exception if it already exists."
msgstr "使用bzip2 压缩创建tarfile。如果文件已经存在，则抛出 :exc:`FileExistsError` 异常。"

#: ../../library/tarfile.rst:77
msgid "``'x:xz'``"
msgstr "``'x:xz'``"

#: ../../library/tarfile.rst:77
msgid ""
"Create a tarfile with lzma compression. Raise an :exc:`FileExistsError` "
"exception if it already exists."
msgstr "使用lzma 压缩创建tarfile。如果文件已经存在，则抛出 :exc:`FileExistsError` 异常。"

#: ../../library/tarfile.rst:81
msgid "``'a' or 'a:'``"
msgstr "``'a' or 'a:'``"

#: ../../library/tarfile.rst:81
msgid ""
"Open for appending with no compression. The file is created if it does not "
"exist."
msgstr "打开以便在没有压缩的情况下追加。如果文件不存在，则创建该文件。"

#: ../../library/tarfile.rst:84
msgid "``'w' or 'w:'``"
msgstr "``'w' or 'w:'``"

#: ../../library/tarfile.rst:84
msgid "Open for uncompressed writing."
msgstr "打开用于未压缩的写入。"

#: ../../library/tarfile.rst:86
msgid "``'w:gz'``"
msgstr "``'w:gz'``"

#: ../../library/tarfile.rst:86
msgid "Open for gzip compressed writing."
msgstr "打开用于 gzip 压缩的写入。"

#: ../../library/tarfile.rst:88
msgid "``'w:bz2'``"
msgstr "``'w:bz2'``"

#: ../../library/tarfile.rst:88
msgid "Open for bzip2 compressed writing."
msgstr "打开用于 bzip2 压缩的写入。"

#: ../../library/tarfile.rst:90
msgid "``'w:xz'``"
msgstr "``'w:xz'``"

#: ../../library/tarfile.rst:90
msgid "Open for lzma compressed writing."
msgstr "打开用于 lzma 压缩的写入。"

#: ../../library/tarfile.rst:93
msgid ""
"Note that ``'a:gz'``, ``'a:bz2'`` or ``'a:xz'`` is not possible. If *mode* "
"is not suitable to open a certain (compressed) file for reading, "
":exc:`ReadError` is raised. Use *mode* ``'r'`` to avoid this.  If a "
"compression method is not supported, :exc:`CompressionError` is raised."
msgstr ""
"请注意 ``'a:gz'``, ``'a:bz2'`` 或 ``'a:xz'`` 是不可能的组合。 如果 *mode* "
"不适用于打开特定（压缩的）文件用于读取，则会引发 :exc:`ReadError`。 请使用 *mode* ``'r'`` 来避免这种情况。 "
"如果某种压缩方法不受支持，则会引发 :exc:`CompressionError`。"

#: ../../library/tarfile.rst:98
msgid ""
"If *fileobj* is specified, it is used as an alternative to a :term:`file "
"object` opened in binary mode for *name*. It is supposed to be at position "
"0."
msgstr ""
"如果指定了 *fileobj*，它会被用作对应于 *name* 的以二进制模式打开的 :term:`file object` 的替代。 "
"它会被设定为处在位置 0。"

#: ../../library/tarfile.rst:101
msgid ""
"For modes ``'w:gz'``, ``'r:gz'``, ``'w:bz2'``, ``'r:bz2'``, ``'x:gz'``, "
"``'x:bz2'``, :func:`tarfile.open` accepts the keyword argument "
"*compresslevel* (default ``9``) to specify the compression level of the "
"file."
msgstr ""
"对于 ``'w:gz'``, ``'r:gz'``, ``'w:bz2'``, ``'r:bz2'``, ``'x:gz'``, ``'x:bz2'``"
" 等模式，:func:`tarfile.open` 接受关键字参数 *compresslevel* (默认值为 ``9``) 来指定文件的压缩等级。"

#: ../../library/tarfile.rst:105
msgid ""
"For special purposes, there is a second format for *mode*: "
"``'filemode|[compression]'``.  :func:`tarfile.open` will return a "
":class:`TarFile` object that processes its data as a stream of blocks.  No "
"random seeking will be done on the file. If given, *fileobj* may be any "
"object that has a :meth:`read` or :meth:`write` method (depending on the "
"*mode*). *bufsize* specifies the blocksize and defaults to ``20 * 512`` "
"bytes. Use this variant in combination with e.g. ``sys.stdin``, a socket "
":term:`file object` or a tape device. However, such a :class:`TarFile` "
"object is limited in that it does not allow random access, see :ref:`tar-"
"examples`.  The currently possible modes:"
msgstr ""
"针对特殊的目的，还存在第二种 *mode* 格式: ``'filemode|[compression]'``。 :func:`tarfile.open`"
" 将返回一个将其数据作为数据块流来处理的 :class:`TarFile` 对象。 对此文件将不能执行随机查找。 如果给定了 "
"*fileobj*，它可以是任何具有 :meth:`read` 或 :meth:`write` 方法 (由 *mode* 确定) 的对象。 "
"*bufsize* 指定块大小，默认值为 ``20 * 512`` 字节。 可与此格式组合使用的有 ``sys.stdin``, 套接字 "
":term:`file object` 或磁带设备等。 但是，对于这样的 :class:`TarFile` 对象存在不允许随机访问的限制，参见 :ref"
":`tar-examples`。 目前可用的模式如下:"

#: ../../library/tarfile.rst:117
msgid "Mode"
msgstr "模式"

#: ../../library/tarfile.rst:117
msgid "Action"
msgstr "动作"

#: ../../library/tarfile.rst:119
msgid "``'r|*'``"
msgstr "``'r|*'``"

#: ../../library/tarfile.rst:119
msgid ""
"Open a *stream* of tar blocks for reading with transparent compression."
msgstr "打开 tar 块的 *流* 以进行透明压缩读取。"

#: ../../library/tarfile.rst:122
msgid "``'r|'``"
msgstr "``'r|'``"

#: ../../library/tarfile.rst:122
msgid "Open a *stream* of uncompressed tar blocks for reading."
msgstr "打开一个未压缩的 tar 块的 *stream* 用于读取。"

#: ../../library/tarfile.rst:125
msgid "``'r|gz'``"
msgstr "``'r|gz'``"

#: ../../library/tarfile.rst:125
msgid "Open a gzip compressed *stream* for reading."
msgstr "打开一个 gzip 压缩的 *stream* 用于读取。"

#: ../../library/tarfile.rst:128
msgid "``'r|bz2'``"
msgstr "``'r|bz2'``"

#: ../../library/tarfile.rst:128
msgid "Open a bzip2 compressed *stream* for reading."
msgstr "打开一个 bzip2 压缩的 *stream* 用于读取。"

#: ../../library/tarfile.rst:131
msgid "``'r|xz'``"
msgstr "``'r|xz'``"

#: ../../library/tarfile.rst:131
msgid "Open an lzma compressed *stream* for reading."
msgstr "打开一个 lzma 压缩 *stream* 用于读取。"

#: ../../library/tarfile.rst:134
msgid "``'w|'``"
msgstr "``'w|'``"

#: ../../library/tarfile.rst:134
msgid "Open an uncompressed *stream* for writing."
msgstr "打开一个未压缩的 *stream* 用于写入。"

#: ../../library/tarfile.rst:136
msgid "``'w|gz'``"
msgstr "``'w|gz'``"

#: ../../library/tarfile.rst:136
msgid "Open a gzip compressed *stream* for writing."
msgstr "打开一个 gzip 压缩的 *stream* 用于写入。"

#: ../../library/tarfile.rst:139
msgid "``'w|bz2'``"
msgstr "``'w|bz2'``"

#: ../../library/tarfile.rst:139
msgid "Open a bzip2 compressed *stream* for writing."
msgstr "打开一个 bzip2 压缩的 *stream* 用于写入。"

#: ../../library/tarfile.rst:142
msgid "``'w|xz'``"
msgstr "``'w|xz'``"

#: ../../library/tarfile.rst:142
msgid "Open an lzma compressed *stream* for writing."
msgstr "打开一个 lzma 压缩的 *stream* 用于写入。"

#: ../../library/tarfile.rst:146 ../../library/tarfile.rst:324
msgid "The ``'x'`` (exclusive creation) mode was added."
msgstr "添加了 ``'x'`` (仅创建) 模式。"

#: ../../library/tarfile.rst:149 ../../library/tarfile.rst:327
#: ../../library/tarfile.rst:495
msgid "The *name* parameter accepts a :term:`path-like object`."
msgstr "*name* 形参接受一个 :term:`path-like object`。"

#: ../../library/tarfile.rst:155
msgid ""
"Class for reading and writing tar archives. Do not use this class directly: "
"use :func:`tarfile.open` instead. See :ref:`tarfile-objects`."
msgstr ""
"用于读取和写入 tar 归档的类。 请不要直接使用这个类：而要使用 :func:`tarfile.open`。 参见 :ref:`tarfile-"
"objects`。"

#: ../../library/tarfile.rst:161
msgid ""
"Return :const:`True` if *name* is a tar archive file, that the "
":mod:`tarfile` module can read."
msgstr "如果 *name* 是一个 :mod:`tarfile` 模块能读取的 tar 归档文件则返回 :const:`True`。"

#: ../../library/tarfile.rst:165
msgid "The :mod:`tarfile` module defines the following exceptions:"
msgstr ":mod:`tarfile` 模块定义了以下异常:"

#: ../../library/tarfile.rst:170
msgid "Base class for all :mod:`tarfile` exceptions."
msgstr "所有 :mod:`tarfile` 异常的基类。"

#: ../../library/tarfile.rst:175
msgid ""
"Is raised when a tar archive is opened, that either cannot be handled by the"
" :mod:`tarfile` module or is somehow invalid."
msgstr "当一个不能被 :mod:`tarfile` 模块处理或者因某种原因而无效的 tar 归档被打开时将被引发。"

#: ../../library/tarfile.rst:181
msgid ""
"Is raised when a compression method is not supported or when the data cannot"
" be decoded properly."
msgstr "当一个压缩方法不受支持或者当数据无法被正确解码时将被引发。"

#: ../../library/tarfile.rst:187
msgid ""
"Is raised for the limitations that are typical for stream-like "
":class:`TarFile` objects."
msgstr "当达到流式 :class:`TarFile` 对象的典型限制时将被引发。"

#: ../../library/tarfile.rst:193
msgid ""
"Is raised for *non-fatal* errors when using :meth:`TarFile.extract`, but "
"only if :attr:`TarFile.errorlevel`\\ ``== 2``."
msgstr ""
"当使用 :meth:`TarFile.extract` 时针对 *non-fatal* 所引发的异常，但是仅限 "
":attr:`TarFile.errorlevel`\\ ``== 2``。"

#: ../../library/tarfile.rst:199
msgid "Is raised by :meth:`TarInfo.frombuf` if the buffer it gets is invalid."
msgstr "如果获取的缓冲区无效则会由 :meth:`TarInfo.frombuf` 引发的异常。"

#: ../../library/tarfile.rst:202
msgid "The following constants are available at the module level:"
msgstr "以下常量在模块层级上可用:"

#: ../../library/tarfile.rst:206
msgid ""
"The default character encoding: ``'utf-8'`` on Windows, the value returned "
"by :func:`sys.getfilesystemencoding` otherwise."
msgstr ""
"默认的字符编码格式：在 Windows 上为 ``'utf-8'``，其他系统上则为 :func:`sys.getfilesystemencoding`"
" 所返回的值。"

#: ../../library/tarfile.rst:210
msgid ""
"Each of the following constants defines a tar archive format that the "
":mod:`tarfile` module is able to create. See section :ref:`tar-formats` for "
"details."
msgstr ""
"以下常量各自定义了一个 :mod:`tarfile` 模块能够创建的 tar 归档格式。 相关细节请参阅 :ref:`tar-formats` 小节。"

#: ../../library/tarfile.rst:217
msgid "POSIX.1-1988 (ustar) format."
msgstr "POSIX.1-1988 (ustar) 格式。"

#: ../../library/tarfile.rst:222
msgid "GNU tar format."
msgstr "GNU tar 格式。"

#: ../../library/tarfile.rst:227
msgid "POSIX.1-2001 (pax) format."
msgstr "POSIX.1-2001 (pax) 格式。"

#: ../../library/tarfile.rst:232
msgid ""
"The default format for creating archives. This is currently "
":const:`GNU_FORMAT`."
msgstr ""

#: ../../library/tarfile.rst:238
msgid "Module :mod:`zipfile`"
msgstr "模块 :mod:`zipfile`"

#: ../../library/tarfile.rst:238
msgid "Documentation of the :mod:`zipfile` standard module."
msgstr ":mod:`zipfile` 标准模块的文档。"

#: ../../library/tarfile.rst:242
msgid ":ref:`archiving-operations`"
msgstr ":ref:`archiving-operations`"

#: ../../library/tarfile.rst:241
msgid ""
"Documentation of the higher-level archiving facilities provided by the "
"standard :mod:`shutil` module."
msgstr "标准 :mod:`shutil` 模块所提供的高层级归档工具的文档。"

#: ../../library/tarfile.rst:244
msgid ""
"`GNU tar manual, Basic Tar Format "
"<https://www.gnu.org/software/tar/manual/html_node/Standard.html>`_"
msgstr ""
"`GNU tar manual, Basic Tar Format "
"<https://www.gnu.org/software/tar/manual/html_node/Standard.html>`_"

#: ../../library/tarfile.rst:245
msgid "Documentation for tar archive files, including GNU tar extensions."
msgstr "针对 tar 归档文件的文档，包含 GNU tar 扩展。"

#: ../../library/tarfile.rst:251
msgid "TarFile Objects"
msgstr "TarFile 对象"

#: ../../library/tarfile.rst:253
msgid ""
"The :class:`TarFile` object provides an interface to a tar archive. A tar "
"archive is a sequence of blocks. An archive member (a stored file) is made "
"up of a header block followed by data blocks. It is possible to store a file"
" in a tar archive several times. Each archive member is represented by a "
":class:`TarInfo` object, see :ref:`tarinfo-objects` for details."
msgstr ""
":class:`TarFile` 对象提供了一个 tar 归档的接口。 一个 tar 归档就是数据块的序列。 "
"一个归档成员（被保存文件）是由一个标头块加多个数据块组成的。 一个文件可以在一个 tar 归档中多次被保存。 每个归档成员都由一个 "
":class:`TarInfo` 对象来代表，详情参见 :ref:`tarinfo-objects`。"

#: ../../library/tarfile.rst:259
msgid ""
"A :class:`TarFile` object can be used as a context manager in a "
":keyword:`with` statement. It will automatically be closed when the block is"
" completed. Please note that in the event of an exception an archive opened "
"for writing will not be finalized; only the internally used file object will"
" be closed. See the :ref:`tar-examples` section for a use case."
msgstr ""
":class:`TarFile` 对象可在 :keyword:`with` 语句中作为上下文管理器使用。 当语句块结束时它将自动被关闭。 "
"请注意在发生异常事件时被打开用于写入的归档将不会被终结；只有内部使用的文件对象将被关闭。 相关用例请参见 :ref:`tar-examples`。"

#: ../../library/tarfile.rst:265
msgid "Added support for the context management protocol."
msgstr "添加了对上下文管理器协议的支持。"

#: ../../library/tarfile.rst:270
msgid ""
"All following arguments are optional and can be accessed as instance "
"attributes as well."
msgstr "下列所有参数都是可选项并且也可作为实例属性来访问。"

#: ../../library/tarfile.rst:273
msgid ""
"*name* is the pathname of the archive. *name* may be a :term:`path-like "
"object`. It can be omitted if *fileobj* is given. In this case, the file "
"object's :attr:`name` attribute is used if it exists."
msgstr ""
"*name* 是归档的路径名称。 *name* 可以是一个 :term:`path-like object`。 如果给定了 *fileobj* "
"则它可以被省略。 在此情况下，如果对象的 :attr:`name` 属性存在则它会被使用。"

#: ../../library/tarfile.rst:277
msgid ""
"*mode* is either ``'r'`` to read from an existing archive, ``'a'`` to append"
" data to an existing file, ``'w'`` to create a new file overwriting an "
"existing one, or ``'x'`` to create a new file only if it does not already "
"exist."
msgstr ""
"*mode* 可以为 ``'r'`` 表示从现有归档读取，``'a'`` 表示将数据追加到现有文件，``'w'`` 表示创建新文件覆盖现有文件，或者 "
"``'x'`` 表示仅在文件不存在时创建新文件。"

#: ../../library/tarfile.rst:281
msgid ""
"If *fileobj* is given, it is used for reading or writing data. If it can be "
"determined, *mode* is overridden by *fileobj*'s mode. *fileobj* will be used"
" from position 0."
msgstr ""
"如果给定了 *fileobj*，它会被用于读取或写入数据。 如果可以被确定，则 *mode* 会被 *fileobj* 的模式所覆盖。 "
"*fileobj* 的使用将从位置 0 开始。"

#: ../../library/tarfile.rst:287
msgid "*fileobj* is not closed, when :class:`TarFile` is closed."
msgstr "当 :class:`TarFile` 被关闭时，*fileobj* 不会被关闭。"

#: ../../library/tarfile.rst:289
msgid ""
"*format* controls the archive format. It must be one of the constants "
":const:`USTAR_FORMAT`, :const:`GNU_FORMAT` or :const:`PAX_FORMAT` that are "
"defined at module level."
msgstr ""

#: ../../library/tarfile.rst:293
msgid ""
"The *tarinfo* argument can be used to replace the default :class:`TarInfo` "
"class with a different one."
msgstr "*tarinfo* 参数可以被用来将默认的 :class:`TarInfo` 类替换为另一个。"

#: ../../library/tarfile.rst:296
msgid ""
"If *dereference* is :const:`False`, add symbolic and hard links to the "
"archive. If it is :const:`True`, add the content of the target files to the "
"archive. This has no effect on systems that do not support symbolic links."
msgstr ""
"如果 *dereference* 为 :const:`False`，则会将符号链接和硬链接添加到归档中。 如果为 "
":const:`True`，则会将目标文件的内容添加到归档中。 在不支持符号链接的系统上参数将不起作用。"

#: ../../library/tarfile.rst:300
msgid ""
"If *ignore_zeros* is :const:`False`, treat an empty block as the end of the "
"archive. If it is :const:`True`, skip empty (and invalid) blocks and try to "
"get as many members as possible. This is only useful for reading "
"concatenated or damaged archives."
msgstr ""
"如果 *ignore_zeros* 为 :const:`False`，则会将空的数据块当作归档的末尾来处理。 如果为 "
":const:`True`，则会跳过空的（和无效的）数据块并尝试获取尽可能多的成员。 此参数仅适用于读取拼接的或损坏的归档。"

#: ../../library/tarfile.rst:304
msgid ""
"*debug* can be set from ``0`` (no debug messages) up to ``3`` (all debug "
"messages). The messages are written to ``sys.stderr``."
msgstr "*debug* 可设为从 ``0`` (无调试消息) 到 ``3`` (全部调试消息)。 消息会被写入到 ``sys.stderr``。"

#: ../../library/tarfile.rst:307
msgid ""
"If *errorlevel* is ``0``, all errors are ignored when using "
":meth:`TarFile.extract`. Nevertheless, they appear as error messages in the "
"debug output, when debugging is enabled.  If ``1``, all *fatal* errors are "
"raised as :exc:`OSError` exceptions. If ``2``, all *non-fatal* errors are "
"raised as :exc:`TarError` exceptions as well."
msgstr ""
"如果 *errorlevel* 为 ``0``，则当使用 :meth:`TarFile.extract` 时会忽略所有错误。 "
"无论何种情况，当启用调试时它们都将被显示为调试输出的错误消息。 如果为 ``1``，则所有 *fatal* 错误会被作为 :exc:`OSError` "
"异常被引发。 如果为 ``2``，则所有 *non-fatal* 错误也会被作为 :exc:`TarError` 异常被引发。"

#: ../../library/tarfile.rst:313
msgid ""
"The *encoding* and *errors* arguments define the character encoding to be "
"used for reading or writing the archive and how conversion errors are going "
"to be handled. The default settings will work for most users. See section "
":ref:`tar-unicode` for in-depth information."
msgstr ""
"*encoding* 和 *errors* 参数定义了读取或写入归档所使用的字符编码格式以及要如何处理转换错误。 默认设置将适用于大多数用户。 "
"要深入了解详情可参阅 :ref:`tar-unicode` 小节。"

#: ../../library/tarfile.rst:318
msgid ""
"The *pax_headers* argument is an optional dictionary of strings which will "
"be added as a pax global header if *format* is :const:`PAX_FORMAT`."
msgstr ""
"可选的 *pax_headers* 参数是字符串的字典，如果 *format* 为 :const:`PAX_FORMAT` 它将被作为 pax "
"全局标头被添加。"

#: ../../library/tarfile.rst:321 ../../library/tarfile.rst:548
msgid "Use ``'surrogateescape'`` as the default for the *errors* argument."
msgstr "使用 ``'surrogateescape'`` 作为 *errors* 参数的默认值。"

#: ../../library/tarfile.rst:333
msgid ""
"Alternative constructor. The :func:`tarfile.open` function is actually a "
"shortcut to this classmethod."
msgstr "作为替代的构造器。 :func:`tarfile.open` 函数实际上是这个类方法的快捷方式。"

#: ../../library/tarfile.rst:339
msgid ""
"Return a :class:`TarInfo` object for member *name*. If *name* can not be "
"found in the archive, :exc:`KeyError` is raised."
msgstr ""
"返回成员 *name* 的 :class:`TarInfo` 对象。 如果 *name* 在归档中找不到，则会引发 :exc:`KeyError`。"

#: ../../library/tarfile.rst:344
msgid ""
"If a member occurs more than once in the archive, its last occurrence is "
"assumed to be the most up-to-date version."
msgstr "如果一个成员在归档中出现超过一次，它的最后一次出现会被视为是最新的版本。"

#: ../../library/tarfile.rst:350
msgid ""
"Return the members of the archive as a list of :class:`TarInfo` objects. The"
" list has the same order as the members in the archive."
msgstr ""

#: ../../library/tarfile.rst:356
msgid ""
"Return the members as a list of their names. It has the same order as the "
"list returned by :meth:`getmembers`."
msgstr ""

#: ../../library/tarfile.rst:362
msgid ""
"Print a table of contents to ``sys.stdout``. If *verbose* is :const:`False`,"
" only the names of the members are printed. If it is :const:`True`, output "
"similar to that of :program:`ls -l` is produced. If optional *members* is "
"given, it must be a subset of the list returned by :meth:`getmembers`."
msgstr ""

#: ../../library/tarfile.rst:367
msgid "Added the *members* parameter."
msgstr ""

#: ../../library/tarfile.rst:373
msgid ""
"Return the next member of the archive as a :class:`TarInfo` object, when "
":class:`TarFile` is opened for reading. Return :const:`None` if there is no "
"more available."
msgstr ""

#: ../../library/tarfile.rst:380
msgid ""
"Extract all members from the archive to the current working directory or "
"directory *path*. If optional *members* is given, it must be a subset of the"
" list returned by :meth:`getmembers`. Directory information like owner, "
"modification time and permissions are set after all members have been "
"extracted. This is done to work around two problems: A directory's "
"modification time is reset each time a file is created in it. And, if a "
"directory's permissions do not allow writing, extracting files to it will "
"fail."
msgstr ""

#: ../../library/tarfile.rst:388 ../../library/tarfile.rst:414
msgid ""
"If *numeric_owner* is :const:`True`, the uid and gid numbers from the "
"tarfile are used to set the owner/group for the extracted files. Otherwise, "
"the named values from the tarfile are used."
msgstr ""

#: ../../library/tarfile.rst:394
msgid ""
"Never extract archives from untrusted sources without prior inspection. It "
"is possible that files are created outside of *path*, e.g. members that have"
" absolute filenames starting with ``\"/\"`` or filenames with two dots "
"``\"..\"``."
msgstr ""

#: ../../library/tarfile.rst:399 ../../library/tarfile.rst:430
msgid "Added the *numeric_owner* parameter."
msgstr ""

#: ../../library/tarfile.rst:402 ../../library/tarfile.rst:433
msgid "The *path* parameter accepts a :term:`path-like object`."
msgstr "*path* 形参接受一个 :term:`path-like object`。"

#: ../../library/tarfile.rst:408
msgid ""
"Extract a member from the archive to the current working directory, using "
"its full name. Its file information is extracted as accurately as possible. "
"*member* may be a filename or a :class:`TarInfo` object. You can specify a "
"different directory using *path*. *path* may be a :term:`path-like object`. "
"File attributes (owner, mtime, mode) are set unless *set_attrs* is false."
msgstr ""

#: ../../library/tarfile.rst:420
msgid ""
"The :meth:`extract` method does not take care of several extraction issues. "
"In most cases you should consider using the :meth:`extractall` method."
msgstr ""

#: ../../library/tarfile.rst:425
msgid "See the warning for :meth:`extractall`."
msgstr ""

#: ../../library/tarfile.rst:427
msgid "Added the *set_attrs* parameter."
msgstr ""

#: ../../library/tarfile.rst:439
msgid ""
"Extract a member from the archive as a file object. *member* may be a "
"filename or a :class:`TarInfo` object. If *member* is a regular file or a "
"link, an :class:`io.BufferedReader` object is returned. Otherwise, "
":const:`None` is returned."
msgstr ""

#: ../../library/tarfile.rst:444
msgid "Return an :class:`io.BufferedReader` object."
msgstr ""

#: ../../library/tarfile.rst:450
msgid ""
"Add the file *name* to the archive. *name* may be any type of file "
"(directory, fifo, symbolic link, etc.). If given, *arcname* specifies an "
"alternative name for the file in the archive. Directories are added "
"recursively by default. This can be avoided by setting *recursive* to "
":const:`False`. Recursion adds entries in sorted order. If *filter* is "
"given, it should be a function that takes a :class:`TarInfo` object argument"
" and returns the changed :class:`TarInfo` object. If it instead returns "
":const:`None` the :class:`TarInfo` object will be excluded from the archive."
" See :ref:`tar-examples` for an example."
msgstr ""

#: ../../library/tarfile.rst:461
msgid "Added the *filter* parameter."
msgstr ""

#: ../../library/tarfile.rst:464
msgid "Recursion adds entries in sorted order."
msgstr ""

#: ../../library/tarfile.rst:470
msgid ""
"Add the :class:`TarInfo` object *tarinfo* to the archive. If *fileobj* is "
"given, it should be a :term:`binary file`, and ``tarinfo.size`` bytes are "
"read from it and added to the archive.  You can create :class:`TarInfo` "
"objects directly, or by using :meth:`gettarinfo`."
msgstr ""

#: ../../library/tarfile.rst:478
msgid ""
"Create a :class:`TarInfo` object from the result of :func:`os.stat` or "
"equivalent on an existing file.  The file is either named by *name*, or "
"specified as a :term:`file object` *fileobj* with a file descriptor. *name* "
"may be a :term:`path-like object`.  If given, *arcname* specifies an "
"alternative name for the file in the archive, otherwise, the name is taken "
"from *fileobj*’s :attr:`~io.FileIO.name` attribute, or the *name* argument."
"  The name should be a text string."
msgstr ""

#: ../../library/tarfile.rst:487
msgid ""
"You can modify some of the :class:`TarInfo`’s attributes before you add it "
"using :meth:`addfile`. If the file object is not an ordinary file object "
"positioned at the beginning of the file, attributes such as "
":attr:`~TarInfo.size` may need modifying.  This is the case for objects such"
" as :class:`~gzip.GzipFile`. The :attr:`~TarInfo.name` may also be modified,"
" in which case *arcname* could be a dummy string."
msgstr ""

#: ../../library/tarfile.rst:501
msgid ""
"Close the :class:`TarFile`. In write mode, two finishing zero blocks are "
"appended to the archive."
msgstr ""

#: ../../library/tarfile.rst:507
msgid "A dictionary containing key-value pairs of pax global headers."
msgstr ""

#: ../../library/tarfile.rst:514
msgid "TarInfo Objects"
msgstr ""

#: ../../library/tarfile.rst:516
msgid ""
"A :class:`TarInfo` object represents one member in a :class:`TarFile`. Aside"
" from storing all required attributes of a file (like file type, size, time,"
" permissions, owner etc.), it provides some useful methods to determine its "
"type. It does *not* contain the file's data itself."
msgstr ""

#: ../../library/tarfile.rst:521
msgid ""
":class:`TarInfo` objects are returned by :class:`TarFile`'s methods "
":meth:`getmember`, :meth:`getmembers` and :meth:`gettarinfo`."
msgstr ""

#: ../../library/tarfile.rst:527
msgid "Create a :class:`TarInfo` object."
msgstr ""

#: ../../library/tarfile.rst:532
msgid "Create and return a :class:`TarInfo` object from string buffer *buf*."
msgstr ""

#: ../../library/tarfile.rst:534
msgid "Raises :exc:`HeaderError` if the buffer is invalid."
msgstr ""

#: ../../library/tarfile.rst:539
msgid ""
"Read the next member from the :class:`TarFile` object *tarfile* and return "
"it as a :class:`TarInfo` object."
msgstr ""

#: ../../library/tarfile.rst:545
msgid ""
"Create a string buffer from a :class:`TarInfo` object. For information on "
"the arguments see the constructor of the :class:`TarFile` class."
msgstr ""

#: ../../library/tarfile.rst:552
msgid "A ``TarInfo`` object has the following public data attributes:"
msgstr ""

#: ../../library/tarfile.rst:557
msgid "Name of the archive member."
msgstr ""

#: ../../library/tarfile.rst:562
msgid "Size in bytes."
msgstr ""

#: ../../library/tarfile.rst:567
msgid "Time of last modification."
msgstr "上次修改的时间。"

#: ../../library/tarfile.rst:572
msgid "Permission bits."
msgstr ""

#: ../../library/tarfile.rst:577
msgid ""
"File type.  *type* is usually one of these constants: :const:`REGTYPE`, "
":const:`AREGTYPE`, :const:`LNKTYPE`, :const:`SYMTYPE`, :const:`DIRTYPE`, "
":const:`FIFOTYPE`, :const:`CONTTYPE`, :const:`CHRTYPE`, :const:`BLKTYPE`, "
":const:`GNUTYPE_SPARSE`.  To determine the type of a :class:`TarInfo` object"
" more conveniently, use the ``is*()`` methods below."
msgstr ""

#: ../../library/tarfile.rst:586
msgid ""
"Name of the target file name, which is only present in :class:`TarInfo` "
"objects of type :const:`LNKTYPE` and :const:`SYMTYPE`."
msgstr ""

#: ../../library/tarfile.rst:592
msgid "User ID of the user who originally stored this member."
msgstr ""

#: ../../library/tarfile.rst:597
msgid "Group ID of the user who originally stored this member."
msgstr ""

#: ../../library/tarfile.rst:602
msgid "User name."
msgstr ""

#: ../../library/tarfile.rst:607
msgid "Group name."
msgstr ""

#: ../../library/tarfile.rst:612
msgid ""
"A dictionary containing key-value pairs of an associated pax extended "
"header."
msgstr ""

#: ../../library/tarfile.rst:615
msgid "A :class:`TarInfo` object also provides some convenient query methods:"
msgstr ""

#: ../../library/tarfile.rst:620
msgid "Return :const:`True` if the :class:`Tarinfo` object is a regular file."
msgstr ""

#: ../../library/tarfile.rst:625
msgid "Same as :meth:`isfile`."
msgstr ""

#: ../../library/tarfile.rst:630
msgid "Return :const:`True` if it is a directory."
msgstr ""

#: ../../library/tarfile.rst:635
msgid "Return :const:`True` if it is a symbolic link."
msgstr ""

#: ../../library/tarfile.rst:640
msgid "Return :const:`True` if it is a hard link."
msgstr ""

#: ../../library/tarfile.rst:645
msgid "Return :const:`True` if it is a character device."
msgstr ""

#: ../../library/tarfile.rst:650
msgid "Return :const:`True` if it is a block device."
msgstr ""

#: ../../library/tarfile.rst:655
msgid "Return :const:`True` if it is a FIFO."
msgstr ""

#: ../../library/tarfile.rst:660
msgid ""
"Return :const:`True` if it is one of character device, block device or FIFO."
msgstr ""

#: ../../library/tarfile.rst:667
msgid "Command-Line Interface"
msgstr "命令行界面"

#: ../../library/tarfile.rst:671
msgid ""
"The :mod:`tarfile` module provides a simple command-line interface to "
"interact with tar archives."
msgstr ""

#: ../../library/tarfile.rst:674
msgid ""
"If you want to create a new tar archive, specify its name after the "
":option:`-c` option and then list the filename(s) that should be included:"
msgstr ""

#: ../../library/tarfile.rst:681
msgid "Passing a directory is also acceptable:"
msgstr "传入一个字典也是可接受的:"

#: ../../library/tarfile.rst:687
msgid ""
"If you want to extract a tar archive into the current directory, use the "
":option:`-e` option:"
msgstr ""

#: ../../library/tarfile.rst:694
msgid ""
"You can also extract a tar archive into a different directory by passing the"
" directory's name:"
msgstr ""

#: ../../library/tarfile.rst:701
msgid "For a list of the files in a tar archive, use the :option:`-l` option:"
msgstr ""

#: ../../library/tarfile.rst:709
msgid "Command-line options"
msgstr "命令行选项"

#: ../../library/tarfile.rst:714
msgid "List files in a tarfile."
msgstr ""

#: ../../library/tarfile.rst:719
msgid "Create tarfile from source files."
msgstr ""

#: ../../library/tarfile.rst:724
msgid ""
"Extract tarfile into the current directory if *output_dir* is not specified."
msgstr ""

#: ../../library/tarfile.rst:729
msgid "Test whether the tarfile is valid or not."
msgstr ""

#: ../../library/tarfile.rst:733
msgid "Verbose output."
msgstr ""

#: ../../library/tarfile.rst:738
msgid "Examples"
msgstr "例子"

#: ../../library/tarfile.rst:740
msgid ""
"How to extract an entire tar archive to the current working directory::"
msgstr ""

#: ../../library/tarfile.rst:747
msgid ""
"How to extract a subset of a tar archive with :meth:`TarFile.extractall` "
"using a generator function instead of a list::"
msgstr ""

#: ../../library/tarfile.rst:762
msgid "How to create an uncompressed tar archive from a list of filenames::"
msgstr ""

#: ../../library/tarfile.rst:770
msgid "The same example using the :keyword:`with` statement::"
msgstr ""

#: ../../library/tarfile.rst:777
msgid ""
"How to read a gzip compressed tar archive and display some member "
"information::"
msgstr ""

#: ../../library/tarfile.rst:791
msgid ""
"How to create an archive and reset the user information using the *filter* "
"parameter in :meth:`TarFile.add`::"
msgstr ""

#: ../../library/tarfile.rst:807
msgid "Supported tar formats"
msgstr ""

#: ../../library/tarfile.rst:809
msgid ""
"There are three tar formats that can be created with the :mod:`tarfile` "
"module:"
msgstr ""

#: ../../library/tarfile.rst:811
msgid ""
"The POSIX.1-1988 ustar format (:const:`USTAR_FORMAT`). It supports filenames"
" up to a length of at best 256 characters and linknames up to 100 "
"characters. The maximum file size is 8 GiB. This is an old and limited but "
"widely supported format."
msgstr ""

#: ../../library/tarfile.rst:816
msgid ""
"The GNU tar format (:const:`GNU_FORMAT`). It supports long filenames and "
"linknames, files bigger than 8 GiB and sparse files. It is the de facto "
"standard on GNU/Linux systems. :mod:`tarfile` fully supports the GNU tar "
"extensions for long names, sparse file support is read-only."
msgstr ""

#: ../../library/tarfile.rst:821
msgid ""
"The POSIX.1-2001 pax format (:const:`PAX_FORMAT`). It is the most flexible "
"format with virtually no limits. It supports long filenames and linknames, "
"large files and stores pathnames in a portable way. However, not all tar "
"implementations today are able to handle pax archives properly."
msgstr ""

#: ../../library/tarfile.rst:826
msgid ""
"The *pax* format is an extension to the existing *ustar* format. It uses "
"extra headers for information that cannot be stored otherwise. There are two"
" flavours of pax headers: Extended headers only affect the subsequent file "
"header, global headers are valid for the complete archive and affect all "
"following files. All the data in a pax header is encoded in *UTF-8* for "
"portability reasons."
msgstr ""

#: ../../library/tarfile.rst:832
msgid ""
"There are some more variants of the tar format which can be read, but not "
"created:"
msgstr ""

#: ../../library/tarfile.rst:835
msgid ""
"The ancient V7 format. This is the first tar format from Unix Seventh "
"Edition, storing only regular files and directories. Names must not be "
"longer than 100 characters, there is no user/group name information. Some "
"archives have miscalculated header checksums in case of fields with non-"
"ASCII characters."
msgstr ""

#: ../../library/tarfile.rst:840
msgid ""
"The SunOS tar extended format. This format is a variant of the POSIX.1-2001 "
"pax format, but is not compatible."
msgstr ""

#: ../../library/tarfile.rst:846
msgid "Unicode issues"
msgstr ""

#: ../../library/tarfile.rst:848
msgid ""
"The tar format was originally conceived to make backups on tape drives with "
"the main focus on preserving file system information. Nowadays tar archives "
"are commonly used for file distribution and exchanging archives over "
"networks. One problem of the original format (which is the basis of all "
"other formats) is that there is no concept of supporting different character"
" encodings. For example, an ordinary tar archive created on a *UTF-8* system"
" cannot be read correctly on a *Latin-1* system if it contains non-*ASCII* "
"characters. Textual metadata (like filenames, linknames, user/group names) "
"will appear damaged. Unfortunately, there is no way to autodetect the "
"encoding of an archive. The pax format was designed to solve this problem. "
"It stores non-ASCII metadata using the universal character encoding *UTF-8*."
msgstr ""

#: ../../library/tarfile.rst:860
msgid ""
"The details of character conversion in :mod:`tarfile` are controlled by the "
"*encoding* and *errors* keyword arguments of the :class:`TarFile` class."
msgstr ""

#: ../../library/tarfile.rst:863
msgid ""
"*encoding* defines the character encoding to use for the metadata in the "
"archive. The default value is :func:`sys.getfilesystemencoding` or "
"``'ascii'`` as a fallback. Depending on whether the archive is read or "
"written, the metadata must be either decoded or encoded. If *encoding* is "
"not set appropriately, this conversion may fail."
msgstr ""

#: ../../library/tarfile.rst:869
msgid ""
"The *errors* argument defines how characters are treated that cannot be "
"converted. Possible values are listed in section :ref:`error-handlers`. The "
"default scheme is ``'surrogateescape'`` which Python also uses for its file "
"system calls, see :ref:`os-filenames`."
msgstr ""

#: ../../library/tarfile.rst:874
msgid ""
"In case of :const:`PAX_FORMAT` archives, *encoding* is generally not needed "
"because all the metadata is stored using *UTF-8*. *encoding* is only used in"
" the rare cases when binary pax headers are decoded or when strings with "
"surrogate characters are stored."
msgstr ""
