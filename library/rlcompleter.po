# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Freesand Leo <yuqinju@163.com>, 2018
# ppcfish <ppcfish@gmail.com>, 2019
# Zombie110year <zombie110year@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-01 10:14+0900\n"
"PO-Revision-Date: 2017-02-16 23:24+0000\n"
"Last-Translator: Zombie110year <zombie110year@gmail.com>, 2019\n"
"Language-Team: Chinese (China) (https://www.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/rlcompleter.rst:2
msgid ":mod:`rlcompleter` --- Completion function for GNU readline"
msgstr ":mod:`rlcompleter` --- GNU readline的完成函数"

#: ../../library/rlcompleter.rst:9
msgid "**Source code:** :source:`Lib/rlcompleter.py`"
msgstr "**源代码:** :source:`Lib/rlcompleter.py`"

#: ../../library/rlcompleter.rst:13
msgid ""
"The :mod:`rlcompleter` module defines a completion function suitable for the"
" :mod:`readline` module by completing valid Python identifiers and keywords."
msgstr ""
":mod:`rlcompeleter` 通过补全有效的 Python 标识符和关键字为 :mod:`readline` 模块定义了一个补全功能套装."

#: ../../library/rlcompleter.rst:16
msgid ""
"When this module is imported on a Unix platform with the :mod:`readline` "
"module available, an instance of the :class:`Completer` class is "
"automatically created and its :meth:`complete` method is set as the "
":mod:`readline` completer."
msgstr ""
"当此模块在具有可用的 :mod:`readline` 模块的 Unix 平台被导入, 一个 :class:`Completer` "
"实例将被自动创建并且它的 :meth:`complete` 方法将设置为 :mod:`readline` 的补全器."

#: ../../library/rlcompleter.rst:20
msgid "Example::"
msgstr "示例::"

#: ../../library/rlcompleter.rst:31
msgid ""
"The :mod:`rlcompleter` module is designed for use with Python's "
":ref:`interactive mode <tut-interactive>`.  Unless Python is run with the "
":option:`-S` option, the module is automatically imported and configured "
"(see :ref:`rlcompleter-config`)."
msgstr ""
":mod:`rlcompleter` 模块是为了使用 Python 的 :ref:`交互模式 <tut-interactive>` 而设计的. 除非 "
"Python 是通过 :option:`-S` 选项运行, 这个模块总是自动地被导入且配置(参考 :ref:`rlcompleter-config`)."

#: ../../library/rlcompleter.rst:36
msgid ""
"On platforms without :mod:`readline`, the :class:`Completer` class defined "
"by this module can still be used for custom purposes."
msgstr "在没有 :mod:`readline` 的平台, 此模块定义的 :class:`Completer` 类仍然可以用于自定义行为."

#: ../../library/rlcompleter.rst:43
msgid "Completer Objects"
msgstr "Completer对象"

#: ../../library/rlcompleter.rst:45
msgid "Completer objects have the following method:"
msgstr "Completer对象具有以下方法："

#: ../../library/rlcompleter.rst:50
msgid "Return the *state*\\ th completion for *text*."
msgstr "为 *text* 返回 *state*\\ th 补全."

#: ../../library/rlcompleter.rst:52
msgid ""
"If called for *text* that doesn't include a period character (``'.'``), it "
"will complete from names currently defined in :mod:`__main__`, "
":mod:`builtins` and keywords (as defined by the :mod:`keyword` module)."
msgstr ""
"如果要求 *text* 不包含句点字符 (``'.'``), 它将从当前定义的名称中完成 :mod:`__main__`, "
":mod:`builtins` 和 keywords (就和通过 :mod:`keyword` 模块定义的一样)."

#: ../../library/rlcompleter.rst:56
msgid ""
"If called for a dotted name, it will try to evaluate anything without "
"obvious side-effects (functions will not be evaluated, but it can generate "
"calls to :meth:`__getattr__`) up to the last part, and find matches for the "
"rest via the :func:`dir` function.  Any exception raised during the "
"evaluation of the expression is caught, silenced and :const:`None` is "
"returned."
msgstr ""
