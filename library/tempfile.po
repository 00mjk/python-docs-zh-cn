# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# nick <2330458484@qq.com>, 2019
# Arisaka97 <solitaire2312@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-11 01:07+0000\n"
"PO-Revision-Date: 2019-09-01 03:22+0000\n"
"Last-Translator: Arisaka97 <solitaire2312@gmail.com>, 2019\n"
"Language-Team: Chinese (China) (https://www.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/tempfile.rst:2
msgid ":mod:`tempfile` --- Generate temporary files and directories"
msgstr ":mod:`tempfile` --- 生成临时文件和目录"

#: ../../library/tempfile.rst:9
msgid "**Source code:** :source:`Lib/tempfile.py`"
msgstr "**源代码：** :source:`Lib/tempfile.py`"

#: ../../library/tempfile.rst:17
msgid ""
"This module creates temporary files and directories.  It works on all "
"supported platforms. :class:`TemporaryFile`, :class:`NamedTemporaryFile`, "
":class:`TemporaryDirectory`, and :class:`SpooledTemporaryFile` are high-"
"level interfaces which provide automatic cleanup and can be used as context "
"managers. :func:`mkstemp` and :func:`mkdtemp` are lower-level functions "
"which require manual cleanup."
msgstr ""
"该模块用于创建临时文件和目录，它可以跨平台使用。:class:`TemporaryFile`、:class:`NamedTemporaryFile`、:class:`TemporaryDirectory`"
" 和 :class:`SpooledTemporaryFile` 是带有自动清理功能的高级接口，可用作上下文管理器。:func:`mkstemp` 和 "
":func:`mkdtemp` 是低级函数，使用完毕需手动清理。"

#: ../../library/tempfile.rst:24
msgid ""
"All the user-callable functions and constructors take additional arguments "
"which allow direct control over the location and name of temporary files and"
" directories. Files names used by this module include a string of random "
"characters which allows those files to be securely created in shared "
"temporary directories. To maintain backward compatibility, the argument "
"order is somewhat odd; it is recommended to use keyword arguments for "
"clarity."
msgstr ""
"所有由用户调用的函数和构造函数都带有参数，这些参数可以设置临时文件和临时目录的路径和名称。该模块生成的文件名包括一串随机字符，在公共的临时目录中，这些字符可以让创建文件更加安全。为了保持向后兼容性，参数的顺序有些奇怪。所以为了代码清晰，建议使用关键字参数。"

#: ../../library/tempfile.rst:32
msgid "The module defines the following user-callable items:"
msgstr "这个模块定义了以下内容供用户调用："

#: ../../library/tempfile.rst:36
msgid ""
"Return a :term:`file-like object` that can be used as a temporary storage "
"area. The file is created securely, using the same rules as :func:`mkstemp`."
" It will be destroyed as soon as it is closed (including an implicit close "
"when the object is garbage collected).  Under Unix, the directory entry for "
"the file is either not created at all or is removed immediately after the "
"file is created.  Other platforms do not support this; your code should not "
"rely on a temporary file created using this function having or not having a "
"visible name in the file system."
msgstr ""
"返回一个 :term:`file-like object` 作为临时存储区域。创建该文件使用了与 :func:`mkstemp` "
"相同的安全规则。它将在关闭后立即销毁（包括垃圾回收机制关闭该对象时）。在 Unix "
"下，该文件在目录中的条目根本不创建，或者创建文件后立即就被删除了，其他平台不支持此功能。您的代码不应依赖使用此功能创建的临时文件名称，因为它在文件系统中的名称可能是可见的，也可能是不可见的。"

#: ../../library/tempfile.rst:44
msgid ""
"The resulting object can be used as a context manager (see :ref:`tempfile-"
"examples`).  On completion of the context or destruction of the file object "
"the temporary file will be removed from the filesystem."
msgstr ""
"生成的对象可以用作上下文管理器（参见 :ref:`tempfile-examples`）。完成文件对象的上下文或销毁后，临时文件将从文件系统中删除。"

#: ../../library/tempfile.rst:49
msgid ""
"The *mode* parameter defaults to ``'w+b'`` so that the file created can be "
"read and written without being closed.  Binary mode is used so that it "
"behaves consistently on all platforms without regard for the data that is "
"stored.  *buffering*, *encoding* and *newline* are interpreted as for "
":func:`open`."
msgstr ""

#: ../../library/tempfile.rst:55
msgid ""
"The *dir*, *prefix* and *suffix* parameters have the same meaning and "
"defaults as with :func:`mkstemp`."
msgstr "参数 *dir*、*prefix* 和 *suffix* 的含义和默认值都与它们在 :func:`mkstemp` 中的相同。"

#: ../../library/tempfile.rst:58
msgid ""
"The returned object is a true file object on POSIX platforms.  On other "
"platforms, it is a file-like object whose :attr:`!file` attribute is the "
"underlying true file object."
msgstr ""
"在 POSIX 平台上，它返回的对象是真实的文件对象。在其他平台上，它是一个文件类对象 (file-like object)，它的 "
":attr:`!file` 属性是底层的真实文件对象。"

#: ../../library/tempfile.rst:62
msgid ""
"The :py:data:`os.O_TMPFILE` flag is used if it is available and works "
"(Linux-specific, requires Linux kernel 3.11 or later)."
msgstr "如果可用，则使用 :py:data:`os.O_TMPFILE` 标志（仅限于 Linux，需要 3.11 及更高版本的内核）。"

#: ../../library/tempfile.rst:67
msgid "The :py:data:`os.O_TMPFILE` flag is now used if available."
msgstr "如果可用，现在用的是 :py:data:`os.O_TMPFILE` 标志。"

#: ../../library/tempfile.rst:72
msgid ""
"This function operates exactly as :func:`TemporaryFile` does, except that "
"the file is guaranteed to have a visible name in the file system (on Unix, "
"the directory entry is not unlinked).  That name can be retrieved from the "
":attr:`name` attribute of the returned file-like object.  Whether the name "
"can be used to open the file a second time, while the named temporary file "
"is still open, varies across platforms (it can be so used on Unix; it cannot"
" on Windows NT or later).  If *delete* is true (the default), the file is "
"deleted as soon as it is closed. The returned object is always a file-like "
"object whose :attr:`!file` attribute is the underlying true file object. "
"This file-like object can be used in a :keyword:`with` statement, just like "
"a normal file."
msgstr ""
"此函数执行的操作与 :func:`TemporaryFile` 完全相同，但确保了该临时文件在文件系统中具有可见的名称（在 Unix "
"上表现为目录条目不取消链接）。从返回的文件类对象的 :attr:`name` "
"属性中可以检索到文件名。在临时文件仍打开时，是否允许用文件名第二次打开文件，在各个平台上是不同的（在 Unix 上可以，但在 Windows NT "
"或更高版本上不行）。如果 *delete* 为 true（默认值），则文件会在关闭后立即被删除。该函数返回的对象始终是文件类对象 (file-like "
"object)，它的 :attr:`!file` 属性是底层的真实文件对象。文件类对象可以像普通文件一样在 :keyword:`with` 语句中使用。"

#: ../../library/tempfile.rst:88
msgid ""
"This function operates exactly as :func:`TemporaryFile` does, except that "
"data is spooled in memory until the file size exceeds *max_size*, or until "
"the file's :func:`fileno` method is called, at which point the contents are "
"written to disk and operation proceeds as with :func:`TemporaryFile`."
msgstr ""
"此函数执行的操作与 :func:`TemporaryFile` 完全相同，但会将数据缓存在内存中，直到文件大小超过 *max_size*，或调用文件的 "
":func:`fileno` 方法为止，此时数据会被写入磁盘，并且写入操作与 :func:`TemporaryFile` 相同。"

#: ../../library/tempfile.rst:94
msgid ""
"The resulting file has one additional method, :func:`rollover`, which causes"
" the file to roll over to an on-disk file regardless of its size."
msgstr "此函数生成的文件对象有一个额外的方法——:func:`rollover`，可以忽略文件大小，让文件立即写入磁盘。"

#: ../../library/tempfile.rst:97
msgid ""
"The returned object is a file-like object whose :attr:`_file` attribute is "
"either an :class:`io.BytesIO` or :class:`io.StringIO` object (depending on "
"whether binary or text *mode* was specified) or a true file object, "
"depending on whether :func:`rollover` has been called.  This file-like "
"object can be used in a :keyword:`with` statement, just like a normal file."
msgstr ""
"返回的对象是文件类对象 (file-like object)，它的 :attr:`_file` 属性是 :class:`io.BytesIO` 或 "
":class:`io.StringIO` 对象（取决于指定的是二进制模式还是文本模式）或真实的文件对象（取决于是否已调用 "
":func:`rollover`）。文件类对象可以像普通文件一样在 :keyword:`with` 语句中使用。"

#: ../../library/tempfile.rst:104
msgid "the truncate method now accepts a ``size`` argument."
msgstr "现在，文件的 truncate 方法可接受一个 ``size`` 参数。"

#: ../../library/tempfile.rst:110
msgid ""
"This function securely creates a temporary directory using the same rules as"
" :func:`mkdtemp`. The resulting object can be used as a context manager (see"
" :ref:`tempfile-examples`).  On completion of the context or destruction of "
"the temporary directory object the newly created temporary directory and all"
" its contents are removed from the filesystem."
msgstr ""
"此函数会安全地创建一个临时目录，且使用与 :func:`mkdtemp` 相同的规则。此函数返回的对象可用作上下文管理器（参见 :ref"
":`tempfile-examples`）。完成上下文或销毁临时目录对象后，新创建的临时目录及其所有内容将从文件系统中删除。"

#: ../../library/tempfile.rst:116
msgid ""
"The directory name can be retrieved from the :attr:`name` attribute of the "
"returned object.  When the returned object is used as a context manager, the"
" :attr:`name` will be assigned to the target of the :keyword:`!as` clause in"
" the :keyword:`with` statement, if there is one."
msgstr ""
"可以从返回对象的 :attr:`name` 属性中找到临时目录的名称。当返回的对象用作上下文管理器时，这个 :attr:`name` 会作为 "
":keyword:`with` 语句中 :keyword:`!as` 子句的目标（如果有 as 的话）。"

#: ../../library/tempfile.rst:121
msgid ""
"The directory can be explicitly cleaned up by calling the :func:`cleanup` "
"method."
msgstr "可以调用 :func:`cleanup` 方法来手动清理目录。"

#: ../../library/tempfile.rst:129
msgid ""
"Creates a temporary file in the most secure manner possible.  There are no "
"race conditions in the file's creation, assuming that the platform properly "
"implements the :const:`os.O_EXCL` flag for :func:`os.open`.  The file is "
"readable and writable only by the creating user ID.  If the platform uses "
"permission bits to indicate whether a file is executable, the file is "
"executable by no one.  The file descriptor is not inherited by child "
"processes."
msgstr ""

#: ../../library/tempfile.rst:137
msgid ""
"Unlike :func:`TemporaryFile`, the user of :func:`mkstemp` is responsible for"
" deleting the temporary file when done with it."
msgstr ""

#: ../../library/tempfile.rst:140
msgid ""
"If *suffix* is not ``None``, the file name will end with that suffix, "
"otherwise there will be no suffix.  :func:`mkstemp` does not put a dot "
"between the file name and the suffix; if you need one, put it at the "
"beginning of *suffix*."
msgstr ""

#: ../../library/tempfile.rst:145
msgid ""
"If *prefix* is not ``None``, the file name will begin with that prefix; "
"otherwise, a default prefix is used.  The default is the return value of "
":func:`gettempprefix` or :func:`gettempprefixb`, as appropriate."
msgstr ""

#: ../../library/tempfile.rst:149
msgid ""
"If *dir* is not ``None``, the file will be created in that directory; "
"otherwise, a default directory is used.  The default directory is chosen "
"from a platform-dependent list, but the user of the application can control "
"the directory location by setting the *TMPDIR*, *TEMP* or *TMP* environment "
"variables.  There is thus no guarantee that the generated filename will have"
" any nice properties, such as not requiring quoting when passed to external "
"commands via ``os.popen()``."
msgstr ""

#: ../../library/tempfile.rst:157
msgid ""
"If any of *suffix*, *prefix*, and *dir* are not ``None``, they must be the "
"same type. If they are bytes, the returned name will be bytes instead of "
"str. If you want to force a bytes return value with otherwise default "
"behavior, pass ``suffix=b''``."
msgstr ""

#: ../../library/tempfile.rst:163
msgid ""
"If *text* is specified, it indicates whether to open the file in binary mode"
" (the default) or text mode.  On some platforms, this makes no difference."
msgstr ""

#: ../../library/tempfile.rst:167
msgid ""
":func:`mkstemp` returns a tuple containing an OS-level handle to an open "
"file (as would be returned by :func:`os.open`) and the absolute pathname of "
"that file, in that order."
msgstr ""

#: ../../library/tempfile.rst:171 ../../library/tempfile.rst:195
msgid ""
"*suffix*, *prefix*, and *dir* may now be supplied in bytes in order to "
"obtain a bytes return value.  Prior to this, only str was allowed. *suffix* "
"and *prefix* now accept and default to ``None`` to cause an appropriate "
"default value to be used."
msgstr ""

#: ../../library/tempfile.rst:177 ../../library/tempfile.rst:201
msgid "The *dir* parameter now accepts a :term:`path-like object`."
msgstr ""

#: ../../library/tempfile.rst:183
msgid ""
"Creates a temporary directory in the most secure manner possible. There are "
"no race conditions in the directory's creation.  The directory is readable, "
"writable, and searchable only by the creating user ID."
msgstr ""

#: ../../library/tempfile.rst:187
msgid ""
"The user of :func:`mkdtemp` is responsible for deleting the temporary "
"directory and its contents when done with it."
msgstr ""

#: ../../library/tempfile.rst:190
msgid ""
"The *prefix*, *suffix*, and *dir* arguments are the same as for "
":func:`mkstemp`."
msgstr ""

#: ../../library/tempfile.rst:193
msgid ":func:`mkdtemp` returns the absolute pathname of the new directory."
msgstr ""

#: ../../library/tempfile.rst:207
msgid ""
"Return the name of the directory used for temporary files. This defines the "
"default value for the *dir* argument to all functions in this module."
msgstr ""

#: ../../library/tempfile.rst:211
msgid ""
"Python searches a standard list of directories to find one which the calling"
" user can create files in.  The list is:"
msgstr ""

#: ../../library/tempfile.rst:214
msgid "The directory named by the :envvar:`TMPDIR` environment variable."
msgstr ""

#: ../../library/tempfile.rst:216
msgid "The directory named by the :envvar:`TEMP` environment variable."
msgstr ""

#: ../../library/tempfile.rst:218
msgid "The directory named by the :envvar:`TMP` environment variable."
msgstr ""

#: ../../library/tempfile.rst:220
msgid "A platform-specific location:"
msgstr ""

#: ../../library/tempfile.rst:222
msgid ""
"On Windows, the directories :file:`C:\\\\TEMP`, :file:`C:\\\\TMP`, "
":file:`\\\\TEMP`, and :file:`\\\\TMP`, in that order."
msgstr ""

#: ../../library/tempfile.rst:225
msgid ""
"On all other platforms, the directories :file:`/tmp`, :file:`/var/tmp`, and "
":file:`/usr/tmp`, in that order."
msgstr ""

#: ../../library/tempfile.rst:228
msgid "As a last resort, the current working directory."
msgstr ""

#: ../../library/tempfile.rst:230
msgid ""
"The result of this search is cached, see the description of :data:`tempdir` "
"below."
msgstr ""

#: ../../library/tempfile.rst:235
msgid "Same as :func:`gettempdir` but the return value is in bytes."
msgstr ""

#: ../../library/tempfile.rst:241
msgid ""
"Return the filename prefix used to create temporary files.  This does not "
"contain the directory component."
msgstr ""

#: ../../library/tempfile.rst:246
msgid "Same as :func:`gettempprefix` but the return value is in bytes."
msgstr ""

#: ../../library/tempfile.rst:250
msgid ""
"The module uses a global variable to store the name of the directory used "
"for temporary files returned by :func:`gettempdir`.  It can be set directly "
"to override the selection process, but this is discouraged. All functions in"
" this module take a *dir* argument which can be used to specify the "
"directory and this is the recommended approach."
msgstr ""

#: ../../library/tempfile.rst:258
msgid ""
"When set to a value other than ``None``, this variable defines the default "
"value for the *dir* argument to the functions defined in this module."
msgstr ""

#: ../../library/tempfile.rst:262
msgid ""
"If ``tempdir`` is ``None`` (the default) at any call to any of the above "
"functions except :func:`gettempprefix` it is initialized following the "
"algorithm described in :func:`gettempdir`."
msgstr ""

#: ../../library/tempfile.rst:269
msgid "Examples"
msgstr "例子"

#: ../../library/tempfile.rst:271
msgid ""
"Here are some examples of typical usage of the :mod:`tempfile` module::"
msgstr ""

#: ../../library/tempfile.rst:302
msgid "Deprecated functions and variables"
msgstr ""

#: ../../library/tempfile.rst:304
msgid ""
"A historical way to create temporary files was to first generate a file name"
" with the :func:`mktemp` function and then create a file using this name. "
"Unfortunately this is not secure, because a different process may create a "
"file with this name in the time between the call to :func:`mktemp` and the "
"subsequent attempt to create the file by the first process. The solution is "
"to combine the two steps and create the file immediately. This approach is "
"used by :func:`mkstemp` and the other functions described above."
msgstr ""

#: ../../library/tempfile.rst:315
msgid "Use :func:`mkstemp` instead."
msgstr ""

#: ../../library/tempfile.rst:318
msgid ""
"Return an absolute pathname of a file that did not exist at the time the "
"call is made.  The *prefix*, *suffix*, and *dir* arguments are similar to "
"those of :func:`mkstemp`, except that bytes file names, ``suffix=None`` and "
"``prefix=None`` are not supported."
msgstr ""

#: ../../library/tempfile.rst:325
msgid ""
"Use of this function may introduce a security hole in your program.  By the "
"time you get around to doing anything with the file name it returns, someone"
" else may have beaten you to the punch.  :func:`mktemp` usage can be "
"replaced easily with :func:`NamedTemporaryFile`, passing it the "
"``delete=False`` parameter::"
msgstr ""
