# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# 操旭 <caoxu3000@126.com>, 2017
# Shengjing Zhu <zsj950618@gmail.com>, 2018
# walkinrain <walkinrain2008@163.com>, 2019
# Zombie110year <zombie110year@gmail.com>, 2019
# ppcfish <ppcfish@gmail.com>, 2019
# Freesand Leo <yuqinju@163.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-01 12:19+0000\n"
"PO-Revision-Date: 2017-02-16 23:06+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2020\n"
"Language-Team: Chinese (China) (https://www.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:2
msgid ":mod:`dbm` --- Interfaces to Unix \"databases\""
msgstr ":mod:`dbm` --- Unix \"数据库\" 接口"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:7
msgid "**Source code:** :source:`Lib/dbm/__init__.py`"
msgstr "**源代码:** :source:`Lib/dbm/__init__.py`"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:11
msgid ""
":mod:`dbm` is a generic interface to variants of the DBM database --- "
":mod:`dbm.gnu` or :mod:`dbm.ndbm`.  If none of these modules is installed, "
"the slow-but-simple implementation in module :mod:`dbm.dumb` will be used.  "
"There is a `third party interface "
"<https://www.jcea.es/programacion/pybsddb.htm>`_ to the Oracle Berkeley DB."
msgstr ""
":mod:`dbm` 是一种泛用接口，针对各种 DBM 数据库 --- 包括 :mod:`dbm.gnu` 或 :mod:`dbm.ndbm`。 "
"如果未安装这些模块中的任何一种，则将使用 :mod:`dbm.dumb` 模块中慢速但简单的实现。 还有一个适用于 Oracle Berkeley DB"
" 的 `第三方接口 <https://www.jcea.es/programacion/pybsddb.htm>`_。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:20
msgid ""
"A tuple containing the exceptions that can be raised by each of the "
"supported modules, with a unique exception also named :exc:`dbm.error` as "
"the first item --- the latter is used when :exc:`dbm.error` is raised."
msgstr ""
"一个元组，其中包含每个受支持的模块可引发的异常，另外还有一个名为 :exc:`dbm.error` 的特殊异常作为第一项 --- 后者最在引发 "
":exc:`dbm.error` 时被使用。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:27
msgid ""
"This function attempts to guess which of the several simple database modules"
" available --- :mod:`dbm.gnu`, :mod:`dbm.ndbm` or :mod:`dbm.dumb` --- should"
" be used to open a given file."
msgstr ""
"此函数会猜测各种简单数据库模块中的哪一个是可用的 --- :mod:`dbm.gnu`, :mod:`dbm.ndbm` 还是 "
":mod:`dbm.dumb` --- 应该被用来打开给定的文件。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:31
msgid ""
"Returns one of the following values: ``None`` if the file can't be opened "
"because it's unreadable or doesn't exist; the empty string (``''``) if the "
"file's format can't be guessed; or a string containing the required module "
"name, such as ``'dbm.ndbm'`` or ``'dbm.gnu'``."
msgstr ""
"返回下列值中的一个：如果文件由于不可读或不存在而无法打开则返回 ``None``；如果文件的格式无法猜测则返回空字符串 "
"(``''``)；或是包含所需模块名称的字符串，例如 ``'dbm.ndbm'`` 或 ``'dbm.gnu'``。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:39
msgid "Open the database file *file* and return a corresponding object."
msgstr "打开数据库文件 *file* 并返回一个相应的对象。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:41
msgid ""
"If the database file already exists, the :func:`whichdb` function is used to"
" determine its type and the appropriate module is used; if it does not "
"exist, the first module listed above that can be imported is used."
msgstr ""
"如果数据库文件已存在，则使用 :func:`whichdb` 函数来确定其类型和要使用的适当模块；如果文件不存在，则会使用上述可导入模块中的第一个。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:45
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:161
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:346
msgid "The optional *flag* argument can be:"
msgstr "可选的 *flag* 参数可以是："

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:48
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:164
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:183
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:279
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:349
msgid "Value"
msgstr "值"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:48
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:164
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:183
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:279
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:349
msgid "Meaning"
msgstr "意义"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:50
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:166
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:281
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:351
msgid "``'r'``"
msgstr "``'r'``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:50
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:166
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:281
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:351
msgid "Open existing database for reading only (default)"
msgstr "以只读方式打开现有数据库（默认）"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:53
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:169
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:284
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:354
msgid "``'w'``"
msgstr "``'w'``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:53
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:169
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:284
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:354
msgid "Open existing database for reading and writing"
msgstr "以读写方式打开现有数据库"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:56
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:172
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:287
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:357
msgid "``'c'``"
msgstr "``'c'``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:56
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:172
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:287
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:357
msgid "Open database for reading and writing, creating it if it doesn't exist"
msgstr "以读写方式打开数据库，如果不存在则创建它"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:59
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:175
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:290
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:360
msgid "``'n'``"
msgstr "``'n'``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:59
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:175
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:290
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:360
msgid "Always create a new, empty database, open for reading and writing"
msgstr "始终创建一个新的空数据库，以读写方式打开"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:63
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:294
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:364
msgid ""
"The optional *mode* argument is the Unix mode of the file, used only when "
"the database has to be created.  It defaults to octal ``0o666`` (and will be"
" modified by the prevailing umask)."
msgstr ""
"可选的 *mode* 参数是文件的 Unix 模式，仅在要创建数据库时才会被使用。 其默认值为八进制数 ``0o666`` (并将被当前的 umask "
"所修改)。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:68
msgid ""
"The object returned by :func:`.open` supports the same basic functionality "
"as dictionaries; keys and their corresponding values can be stored, "
"retrieved, and deleted, and the :keyword:`in` operator and the :meth:`keys` "
"method are available, as well as :meth:`get` and :meth:`setdefault`."
msgstr ""
":func:`.open` 所返回的对象支持与字典相同的基本功能；可以存储、获取和删除键及其对应的值，并可使用 :keyword:`in` 运算符和 "
":meth:`keys` 方法，以及 :meth:`get` 和 :meth:`setdefault`。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:73
msgid ""
":meth:`get` and :meth:`setdefault` are now available in all database "
"modules."
msgstr "现在 :meth:`get` 和 :meth:`setdefault` 在所有数据库模块中均可用。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:76
msgid ""
"Deleting a key from a read-only database raises database module specific "
"error instead of :exc:`KeyError`."
msgstr "从只读数据库中删除键将引发数据库模块专属的错误而不是 :exc:`KeyError`。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:80
msgid ""
"Key and values are always stored as bytes. This means that when strings are "
"used they are implicitly converted to the default encoding before being "
"stored."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:84
msgid ""
"These objects also support being used in a :keyword:`with` statement, which "
"will automatically close them when done."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:87
msgid ""
"Added native support for the context management protocol to the objects "
"returned by :func:`.open`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:91
msgid ""
"The following example records some hostnames and a corresponding title,  and"
" then prints out the contents of the database::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:121
msgid "Module :mod:`shelve`"
msgstr "模块 :mod:`shelve`"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:122
msgid "Persistence module which stores non-string data."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:125
msgid "The individual submodules are described in the following sections."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:129
msgid ":mod:`dbm.gnu` --- GNU's reinterpretation of dbm"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:135
msgid "**Source code:** :source:`Lib/dbm/gnu.py`"
msgstr "**源代码:** :source:`Lib/dbm/gnu.py`"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:139
msgid ""
"This module is quite similar to the :mod:`dbm` module, but uses the GNU "
"library ``gdbm`` instead to provide some additional functionality.  Please "
"note that the file formats created by :mod:`dbm.gnu` and :mod:`dbm.ndbm` are"
" incompatible."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:143
msgid ""
"The :mod:`dbm.gnu` module provides an interface to the GNU DBM library. "
"``dbm.gnu.gdbm`` objects behave like mappings (dictionaries), except that "
"keys and values are always converted to bytes before storing.  Printing a "
"``gdbm`` object doesn't print the keys and values, and the :meth:`items` and"
" :meth:`values` methods are not supported."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:152
msgid ""
"Raised on :mod:`dbm.gnu`-specific errors, such as I/O errors. "
":exc:`KeyError` is raised for general mapping errors like specifying an "
"incorrect key."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:158
msgid ""
"Open a ``gdbm`` database and return a :class:`gdbm` object.  The *filename* "
"argument is the name of the database file."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:179
msgid ""
"The following additional characters may be appended to the flag to control "
"how the database is opened:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:185
msgid "``'f'``"
msgstr "``'f'``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:185
msgid ""
"Open the database in fast mode.  Writes to the database will not be "
"synchronized."
msgstr "以快速模式打开数据库。写入数据库将不会同步。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:188
msgid "``'s'``"
msgstr "``'s'``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:188
msgid ""
"Synchronized mode. This will cause changes to the database to be immediately"
" written to the file."
msgstr "同步模式。这将导致数据库的更改立即写入文件。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:192
msgid "``'u'``"
msgstr "``'u'``"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:192
msgid "Do not lock database."
msgstr "不要锁定数据库。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:195
msgid ""
"Not all flags are valid for all versions of ``gdbm``.  The module constant "
":const:`open_flags` is a string of supported flag characters.  The exception"
" :exc:`error` is raised if an invalid flag is specified."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:199
msgid ""
"The optional *mode* argument is the Unix mode of the file, used only when "
"the database has to be created.  It defaults to octal ``0o666``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:202
msgid ""
"In addition to the dictionary-like methods, ``gdbm`` objects have the "
"following methods:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:207
msgid ""
"It's possible to loop over every key in the database using this method  and "
"the :meth:`nextkey` method.  The traversal is ordered by ``gdbm``'s internal"
" hash values, and won't be sorted by the key values.  This method returns "
"the starting key."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:214
msgid ""
"Returns the key that follows *key* in the traversal.  The following code "
"prints every key in the database ``db``, without having to create a list in "
"memory that contains them all::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:225
msgid ""
"If you have carried out a lot of deletions and would like to shrink the "
"space used by the ``gdbm`` file, this routine will reorganize the database."
"  ``gdbm`` objects will not shorten the length of a database file except by "
"using this reorganization; otherwise, deleted file space will be kept and "
"reused as new (key, value) pairs are added."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:233
msgid ""
"When the database has been opened in fast mode, this method forces any "
"unwritten data to be written to the disk."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:238
msgid "Close the ``gdbm`` database."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:241
msgid ":mod:`dbm.ndbm` --- Interface based on ndbm"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:247
msgid "**Source code:** :source:`Lib/dbm/ndbm.py`"
msgstr "**源代码:** :source:`Lib/dbm/ndbm.py`"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:251
msgid ""
"The :mod:`dbm.ndbm` module provides an interface to the Unix \"(n)dbm\" "
"library. Dbm objects behave like mappings (dictionaries), except that keys "
"and values are always stored as bytes. Printing a ``dbm`` object doesn't "
"print the keys and values, and the :meth:`items` and :meth:`values` methods "
"are not supported."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:256
msgid ""
"This module can be used with the \"classic\" ndbm interface or the GNU GDBM "
"compatibility interface. On Unix, the :program:`configure` script will "
"attempt to locate the appropriate header file to simplify building this "
"module."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:262
msgid ""
"Raised on :mod:`dbm.ndbm`-specific errors, such as I/O errors. "
":exc:`KeyError` is raised for general mapping errors like specifying an "
"incorrect key."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:268
msgid "Name of the ``ndbm`` implementation library used."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:273
msgid ""
"Open a dbm database and return a ``ndbm`` object.  The *filename* argument "
"is the name of the database file (without the :file:`.dir` or :file:`.pag` "
"extensions)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:276
msgid "The optional *flag* argument must be one of these values:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:298
msgid ""
"In addition to the dictionary-like methods, ``ndbm`` objects provide the "
"following method:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:303
msgid "Close the ``ndbm`` database."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:307
msgid ":mod:`dbm.dumb` --- Portable DBM implementation"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:312
msgid "**Source code:** :source:`Lib/dbm/dumb.py`"
msgstr "**源代码:** :source:`Lib/dbm/dumb.py`"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:318
msgid ""
"The :mod:`dbm.dumb` module is intended as a last resort fallback for the "
":mod:`dbm` module when a more robust module is not available. The "
":mod:`dbm.dumb` module is not written for speed and is not nearly as heavily"
" used as the other database modules."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:325
msgid ""
"The :mod:`dbm.dumb` module provides a persistent dictionary-like interface "
"which is written entirely in Python.  Unlike other modules such as "
":mod:`dbm.gnu` no external library is required.  As with other persistent "
"mappings, the keys and values are always stored as bytes."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:330
msgid "The module defines the following:"
msgstr "该模块定义以下内容："

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:335
msgid ""
"Raised on :mod:`dbm.dumb`-specific errors, such as I/O errors.  "
":exc:`KeyError` is raised for general mapping errors like specifying an "
"incorrect key."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:341
msgid ""
"Open a ``dumbdbm`` database and return a dumbdbm object.  The *filename* "
"argument is the basename of the database file (without any specific "
"extensions).  When a dumbdbm database is created, files with :file:`.dat` "
"and :file:`.dir` extensions are created."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:369
msgid ""
"It is possible to crash the Python interpreter when loading a database with "
"a sufficiently large/complex entry due to stack depth limitations in "
"Python's AST compiler."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:373
msgid ""
":func:`.open` always creates a new database when the flag has the value "
"``'n'``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:377
msgid ""
"A database opened with flags ``'r'`` is now read-only.  Opening with flags "
"``'r'`` and ``'w'`` no longer creates a database if it does not exist."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:382
msgid ""
"In addition to the methods provided by the "
":class:`collections.abc.MutableMapping` class, :class:`dumbdbm` objects "
"provide the following methods:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:388
msgid ""
"Synchronize the on-disk directory and data files.  This method is called by "
"the :meth:`Shelve.sync` method."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/dbm.rst:393
msgid "Close the ``dumbdbm`` database."
msgstr ""
