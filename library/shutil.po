# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Meng Du <alphanow@gmail.com>, 2019
# ppcfish <ppcfish@gmail.com>, 2019
# Freesand Leo <yuqinju@163.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-16 12:12+0000\n"
"PO-Revision-Date: 2017-02-16 23:26+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2019\n"
"Language-Team: Chinese (China) (https://www.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:2
msgid ":mod:`shutil` --- High-level file operations"
msgstr ":mod:`shutil` --- 高阶文件操作"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:10
msgid "**Source code:** :source:`Lib/shutil.py`"
msgstr "**源代码：** :source:`Lib/shutil.py`"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:18
msgid ""
"The :mod:`shutil` module offers a number of high-level operations on files "
"and collections of files.  In particular, functions are provided  which "
"support file copying and removal. For operations on individual files, see "
"also the :mod:`os` module."
msgstr ""
":mod:`shutil` 模块提供了一系列对文件和文件集合的高阶操作。 特别是提供了一些支持文件拷贝和删除的函数。 对于单个文件的操作，请参阅 "
":mod:`os` 模块。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:25
msgid ""
"Even the higher-level file copying functions (:func:`shutil.copy`, "
":func:`shutil.copy2`) cannot copy all file metadata."
msgstr ""
"即便是高阶文件拷贝函数 (:func:`shutil.copy`, :func:`shutil.copy2`) 也无法拷贝所有的文件元数据。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:28
msgid ""
"On POSIX platforms, this means that file owner and group are lost as well as"
" ACLs.  On Mac OS, the resource fork and other metadata are not used. This "
"means that resources will be lost and file type and creator codes will not "
"be correct. On Windows, file owners, ACLs and alternate data streams are not"
" copied."
msgstr ""
"在 POSIX 平台上，这意味着将丢失文件所有者和组以及 ACL 数据。 在 Mac OS 上，资源钩子和其他元数据不被使用。 "
"这意味着将丢失这些资源并且文件类型和创建者代码将不正确。 在 Windows 上，将不会拷贝文件所有者、ACL 和替代数据流。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:38
msgid "Directory and files operations"
msgstr "目录和文件操作"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:42
msgid ""
"Copy the contents of the file-like object *fsrc* to the file-like object "
"*fdst*. The integer *length*, if given, is the buffer size. In particular, a"
" negative *length* value means to copy the data without looping over the "
"source data in chunks; by default the data is read in chunks to avoid "
"uncontrolled memory consumption. Note that if the current file position of "
"the *fsrc* object is not 0, only the contents from the current file position"
" to the end of the file will be copied."
msgstr ""
"将文件类对象 *fsrc* 的内容拷贝到文件类对象 *fdst*。 整数值 *length* 如果给出则为缓冲区大小。 特别地， *length* "
"为负值表示拷贝数据时不对源数据进行分块循环处理；默认情况下会分块读取数据以避免不受控制的内存消耗。 请注意如果 *fsrc* 对象的当前文件位置不为 "
"0，则只有从当前文件位置到文件末尾的内容会被拷贝。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:53
msgid ""
"Copy the contents (no metadata) of the file named *src* to a file named "
"*dst* and return *dst* in the most efficient way possible. *src* and *dst* "
"are path-like objects or path names given as strings."
msgstr ""
"将名为 *src* 的文件的内容（不包括元数据）拷贝到名为 *dst* 的文件并以尽可能高效的方式返回 *dst*。 *src* 和 *dst* "
"均为路径类对象或以字符串形式给出的路径名。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:57
msgid ""
"*dst* must be the complete target file name; look at :func:`~shutil.copy` "
"for a copy that accepts a target directory path.  If *src* and *dst* specify"
" the same file, :exc:`SameFileError` is raised."
msgstr ""
"*dst* 必须是完整的目标文件名；对于接受目标目录路径的拷贝请参见 :func:`~shutil.copy`。 如果 *src* 和 *dst* "
"指定了同一个文件，则将引发 :exc:`SameFileError`。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:61
msgid ""
"The destination location must be writable; otherwise, an :exc:`OSError` "
"exception will be raised. If *dst* already exists, it will be replaced. "
"Special files such as character or block devices and pipes cannot be copied "
"with this function."
msgstr ""
"目标位置必须是可写的；否则将引发 :exc:`OSError` 异常。 如果 *dst* 已经存在，它将被替换。 "
"特殊文件如字符或块设备以及管道无法用此函数来拷贝。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:66
msgid ""
"If *follow_symlinks* is false and *src* is a symbolic link, a new symbolic "
"link will be created instead of copying the file *src* points to."
msgstr "如果 *follow_symlinks* 为假值且 *src* 为符号链接，则将创建一个新的符号链接而不是拷贝 *src* 所指向的文件。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:70
msgid ""
":exc:`IOError` used to be raised instead of :exc:`OSError`. Added "
"*follow_symlinks* argument. Now returns *dst*."
msgstr ""
"曾经是引发 :exc:`IOError` 而不是 :exc:`OSError`。 增加了 *follow_symlinks* 参数。 现在是返回 "
"*dst*。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:75
msgid ""
"Raise :exc:`SameFileError` instead of :exc:`Error`.  Since the former is a "
"subclass of the latter, this change is backward compatible."
msgstr "引发 :exc:`SameFileError` 而不是 :exc:`Error`。 由于前者是后者的子类，此改变是向后兼容的。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:79
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:174
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:202
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:267
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:353
msgid ""
"Platform-specific fast-copy syscalls may be used internally in order to copy"
" the file more efficiently. See :ref:`shutil-platform-dependent-efficient-"
"copy-operations` section."
msgstr ""
"可能会在内部使用平台专属的快速拷贝系统调用以更高效地拷贝文件。 参见 :ref:`shutil-platform-dependent-"
"efficient-copy-operations` 一节。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:86
msgid ""
"This exception is raised if source and destination in :func:`copyfile` are "
"the same file."
msgstr "此异常会在 :func:`copyfile` 中的源和目标为同一文件时被引发。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:94
msgid ""
"Copy the permission bits from *src* to *dst*.  The file contents, owner, and"
" group are unaffected.  *src* and *dst* are path-like objects or path names "
"given as strings. If *follow_symlinks* is false, and both *src* and *dst* "
"are symbolic links, :func:`copymode` will attempt to modify the mode of "
"*dst* itself (rather than the file it points to).  This functionality is not"
" available on every platform; please see :func:`copystat` for more "
"information.  If :func:`copymode` cannot modify symbolic links on the local "
"platform, and it is asked to do so, it will do nothing and return."
msgstr ""
"从 *src* 拷贝权限位到 *dst*。 文件的内容、所有者和分组将不受影响。 *src* 和 *dst* 均为路径类对象或字符串形式的路径名。 如果"
" *follow_symlinks* 为假值，并且 *src* 和 *dst* 均为符号链接，:func:`copymode` 将尝试修改 *dst* "
"本身的模式（而非它所指向的文件）。 此功能并不是在所有平台上均可用；请参阅 :func:`copystat` 了解详情。 如果 "
":func:`copymode` 无法修改本机平台上的符号链接，而它被要求这样做，它将不做任何操作即返回。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:104
msgid "Added *follow_symlinks* argument."
msgstr "加入 *follow_symlinks* 参数。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:109
msgid ""
"Copy the permission bits, last access time, last modification time, and "
"flags from *src* to *dst*.  On Linux, :func:`copystat` also copies the "
"\"extended attributes\" where possible.  The file contents, owner, and group"
" are unaffected.  *src* and *dst* are path-like objects or path names given "
"as strings."
msgstr ""
"从 *src* 拷贝权限位、最近访问时间、最近修改时间以及旗标到 *dst*。 在 Linux上，:func:`copystat` "
"还会在可能的情况下拷贝“扩展属性”。 文件的内容、所有者和分组将不受影响。 *src* 和 *dst* 均为路径类对象或字符串形式的路径名。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:115
msgid ""
"If *follow_symlinks* is false, and *src* and *dst* both refer to symbolic "
"links, :func:`copystat` will operate on the symbolic links themselves rather"
" than the files the symbolic links refer to—reading the information from the"
" *src* symbolic link, and writing the information to the *dst* symbolic "
"link."
msgstr ""
"如果 *follow_symlinks* 为假值，并且 *src* 和 *dst* 均指向符号链接，:func:`copystat` "
"将作用于符号链接本身而非该符号链接所指向的文件 — 从 *src* 符号链接读取信息，并将信息写入 *dst* 符号链接。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:124
msgid ""
"Not all platforms provide the ability to examine and modify symbolic links."
"  Python itself can tell you what functionality is locally available."
msgstr "并非所有平台者提供检查和修改符号链接的功能。 Python 本身可以告诉你哪些功能是在本机上可用的。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:128
msgid ""
"If ``os.chmod in os.supports_follow_symlinks`` is ``True``, :func:`copystat`"
" can modify the permission bits of a symbolic link."
msgstr ""
"如果 ``os.chmod in os.supports_follow_symlinks`` 为 ``True``，则 :func:`copystat`"
" 可以修改符号链接的权限位。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:132
msgid ""
"If ``os.utime in os.supports_follow_symlinks`` is ``True``, :func:`copystat`"
" can modify the last access and modification times of a symbolic link."
msgstr ""
"如果 ``os.utime in os.supports_follow_symlinks`` 为 ``True``，则 :func:`copystat`"
" 可以修改符号链接的最近访问和修改时间。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:136
msgid ""
"If ``os.chflags in os.supports_follow_symlinks`` is ``True``, "
":func:`copystat` can modify the flags of a symbolic link.  (``os.chflags`` "
"is not available on all platforms.)"
msgstr ""
"如果 ``os.chflags in os.supports_follow_symlinks`` 为 ``True``，则 "
":func:`copystat` 可以修改符号链接的旗标。 (``os.chflags`` 不是在所有平台上均可用。)"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:141
msgid ""
"On platforms where some or all of this functionality is unavailable, when "
"asked to modify a symbolic link, :func:`copystat` will copy everything it "
"can. :func:`copystat` never returns failure."
msgstr ""
"在此功能部分或全部不可用的平台上，当被要求修改一个符号链接时，:func:`copystat` 将尽量拷贝所有内容。 :func:`copystat` "
"一定不会返回失败信息。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:146
msgid "Please see :data:`os.supports_follow_symlinks` for more information."
msgstr "更多信息请参阅 :data:`os.supports_follow_symlinks`。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:149
msgid ""
"Added *follow_symlinks* argument and support for Linux extended attributes."
msgstr "添加了 *follow_symlinks* 参数并且支持 Linux 扩展属性。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:154
msgid ""
"Copies the file *src* to the file or directory *dst*.  *src* and *dst* "
"should be strings.  If *dst* specifies a directory, the file will be copied "
"into *dst* using the base filename from *src*.  Returns the path to the "
"newly created file."
msgstr ""
"将文件 *src* 拷贝到文件或目录 *dst*。 *src* 和 *dst* 应为字符串。 如果 *dst* 指定了一个目录，文件将使用 *src* "
"中的基准文件名拷贝到 *dst*。 返回新创建文件的路径。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:159
msgid ""
"If *follow_symlinks* is false, and *src* is a symbolic link, *dst* will be "
"created as a symbolic link.  If *follow_symlinks* is true and *src* is a "
"symbolic link, *dst* will be a copy of the file *src* refers to."
msgstr ""
"如果 *follow_symlinks* 为假值且 *src* 为符号链接，则 *dst* 也将被创建为符号链接。 如果 "
"*follow_symlinks* 为真值且 *src* 为符号链接，*dst* 将成为 *src* 所指向的文件的一个副本。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:164
msgid ""
":func:`~shutil.copy` copies the file data and the file's permission mode "
"(see :func:`os.chmod`).  Other metadata, like the file's creation and "
"modification times, is not preserved. To preserve all file metadata from the"
" original, use :func:`~shutil.copy2` instead."
msgstr ""
":func:`~shutil.copy` 会拷贝文件数据和文件的权限模式 (参见 :func:`os.chmod`)。 "
"其他元数据，例如文件的创建和修改时间不会被保留。 要保留所有原有的元数据，请改用 :func:`~shutil.copy2` 。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:170
msgid ""
"Added *follow_symlinks* argument. Now returns path to the newly created "
"file."
msgstr "添加了 *follow_symlinks* 参数。 现在会返回新创建文件的路径。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:181
msgid ""
"Identical to :func:`~shutil.copy` except that :func:`copy2` also attempts to"
" preserve file metadata."
msgstr "类似于 :func:`~shutil.copy`，区别在于 :func:`copy2` 还会尝试保留文件的元数据。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:184
msgid ""
"When *follow_symlinks* is false, and *src* is a symbolic link, :func:`copy2`"
" attempts to copy all metadata from the *src* symbolic link to the newly-"
"created *dst* symbolic link. However, this functionality is not available on"
" all platforms. On platforms where some or all of this functionality is "
"unavailable, :func:`copy2` will preserve all the metadata it can; "
":func:`copy2` never raises an exception because it cannot preserve file "
"metadata."
msgstr ""
"当 *follow_symlinks* 为假值且 *src* 为符号链接时，:func:`copy2` 会尝试将来自 *src* "
"符号链接的所有元数据拷贝到新创建的 *dst* 符号链接。 但是，此功能不是在所有平台上均可用。 "
"在此功能部分或全部不可用的平台上，:func:`copy2` 将尽量保留所有元数据；:func:`copy2` "
"一定不会由于无法保留文件元数据而引发异常。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:193
msgid ""
":func:`copy2` uses :func:`copystat` to copy the file metadata. Please see "
":func:`copystat` for more information about platform support for modifying "
"symbolic link metadata."
msgstr ""
":func:`copy2` 会使用 :func:`copystat` 来拷贝文件元数据。 请参阅 :func:`copystat` "
"了解有关修改符号链接元数据的平台支持的更多信息。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:197
msgid ""
"Added *follow_symlinks* argument, try to copy extended file system "
"attributes too (currently Linux only). Now returns path to the newly created"
" file."
msgstr "添加了 *follow_symlinks* 参数，还会尝试拷贝扩展文件系统属性（目前仅限 Linux）。 现在会返回新创建文件的路径。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:209
msgid ""
"This factory function creates a function that can be used as a callable for "
":func:`copytree`\\'s *ignore* argument, ignoring files and directories that "
"match one of the glob-style *patterns* provided.  See the example below."
msgstr ""
"这个工厂函数会创建一个函数，它可被用作 :func:`copytree` 的 *ignore* 可调用对象参数，以忽略那些匹配所提供的 glob 风格的"
" *patterns* 之一的文件和目录。 参见以下示例。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:218
msgid ""
"Recursively copy an entire directory tree rooted at *src* to a directory "
"named *dst* and return the destination directory. *dirs_exist_ok* dictates "
"whether to raise an exception in case *dst* or any missing parent directory "
"already exists."
msgstr ""
"将以 *src* 为根起点的整个目录树拷贝到名为 *dst* 的目录并返回目标目录。 *dirs_exist_ok* 指明是否要在 *dst* "
"或任何丢失的父目录已存在的情况下引发异常。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:223
msgid ""
"Permissions and times of directories are copied with :func:`copystat`, "
"individual files are copied using :func:`~shutil.copy2`."
msgstr "目录的权限和时间会通过 :func:`copystat` 来拷贝，单个文件则会使用 :func:`~shutil.copy2` 来拷贝。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:226
msgid ""
"If *symlinks* is true, symbolic links in the source tree are represented as "
"symbolic links in the new tree and the metadata of the original links will "
"be copied as far as the platform allows; if false or omitted, the contents "
"and metadata of the linked files are copied to the new tree."
msgstr ""
"如果 *symlinks* "
"为真值，源目录树中的符号链接会在新目录树中表示为符号链接，并且原链接的元数据在平台允许的情况下也会被拷贝；如果为假值或省略，则会将被链接文件的内容和元数据拷贝到新目录树。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:231
msgid ""
"When *symlinks* is false, if the file pointed by the symlink doesn't exist, "
"an exception will be added in the list of errors raised in an :exc:`Error` "
"exception at the end of the copy process. You can set the optional "
"*ignore_dangling_symlinks* flag to true if you want to silence this "
"exception. Notice that this option has no effect on platforms that don't "
"support :func:`os.symlink`."
msgstr ""
"当 *symlinks* 为假值时，如果符号链接所指向的文件不存在，则会在拷贝进程的末尾将一个异常添加到 :exc:`Error` 异常中的错误列表。 "
"如果你希望屏蔽此异常那就将可选的 *ignore_dangling_symlinks* 旗标设为真值。 请注意此选项在不支持 "
":func:`os.symlink` 的平台上将不起作用。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:238
msgid ""
"If *ignore* is given, it must be a callable that will receive as its "
"arguments the directory being visited by :func:`copytree`, and a list of its"
" contents, as returned by :func:`os.listdir`.  Since :func:`copytree` is "
"called recursively, the *ignore* callable will be called once for each "
"directory that is copied.  The callable must return a sequence of directory "
"and file names relative to the current directory (i.e. a subset of the items"
" in its second argument); these names will then be ignored in the copy "
"process.  :func:`ignore_patterns` can be used to create such a callable that"
" ignores names based on glob-style patterns."
msgstr ""
"如果给出了 *ignore*，它必须是一个可调用对象，该对象将接受 :func:`copytree` 所访问的目录以及 "
":func:`os.listdir` 所返回的目录内容列表作为其参数。 由于 :func:`copytree` 是递归地被调用的，*ignore* "
"可调用对象对于每个被拷贝目录都将被调用一次。 "
"该可调用对象必须返回一个相对于当前目录的目录和文件名序列（即其第二个参数的子集）；随后这些名称将在拷贝进程中被忽略。 "
":func:`ignore_patterns` 可被用于创建这种基于 glob 风格模式来忽略特定名称的可调用对象。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:248
msgid ""
"If exception(s) occur, an :exc:`Error` is raised with a list of reasons."
msgstr "如果发生了（一个或多个）异常，将引发一个附带原因列表的 :exc:`Error`。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:250
msgid ""
"If *copy_function* is given, it must be a callable that will be used to copy"
" each file. It will be called with the source path and the destination path "
"as arguments. By default, :func:`~shutil.copy2` is used, but any function "
"that supports the same signature (like :func:`~shutil.copy`) can be used."
msgstr ""
"如果给出了 *copy_function*，它必须是一个将被用来拷贝每个文件的可调用对象。 它在被调用时会将源路径和目标路径作为参数传入。 "
"默认情况下，:func:`~shutil.copy2` 将被使用，但任何支持同样签名（与 :func:`~shutil.copy` 一致）都可以使用。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:256
msgid ""
"Raises an :ref:`auditing event <auditing>` ``shutil.copytree`` with "
"arguments ``src``, ``dst``."
msgstr ""
"引发一个 :ref:`审核事件 <auditing>` ``shutil.copytree`` 附带参数 ``src``, ``dst``。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:257
msgid "Copy metadata when *symlinks* is false. Now returns *dst*."
msgstr "当 *symlinks* 为假值时拷贝元数据。 现在会返回 *dst*。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:261
msgid ""
"Added the *copy_function* argument to be able to provide a custom copy "
"function. Added the *ignore_dangling_symlinks* argument to silent dangling "
"symlinks errors when *symlinks* is false."
msgstr ""
"添加了 *copy_function* 参数以允许提供定制的拷贝函数。 添加了 *ignore_dangling_symlinks* 参数以便在 "
"*symlinks* 为假值时屏蔽符号链接错误。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:272
msgid "The *dirs_exist_ok* parameter."
msgstr "*dirs_exist_ok* 形参。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:279
msgid ""
"Delete an entire directory tree; *path* must point to a directory (but not a"
" symbolic link to a directory).  If *ignore_errors* is true, errors "
"resulting from failed removals will be ignored; if false or omitted, such "
"errors are handled by calling a handler specified by *onerror* or, if that "
"is omitted, they raise an exception."
msgstr ""
"删除一个完整的目录树；*path* 必须指向一个目录（但不能是一个目录的符号链接）。 如果 *ignore_errors* "
"为真值，删除失败导致的错误将被忽略；如果为假值或是省略，此类错误将通过调用由 *onerror* "
"所指定的处理程序来处理，或者如果此参数被省略则将引发一个异常。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:287
msgid ""
"On platforms that support the necessary fd-based functions a symlink attack "
"resistant version of :func:`rmtree` is used by default.  On other platforms,"
" the :func:`rmtree` implementation is susceptible to a symlink attack: given"
" proper timing and circumstances, attackers can manipulate symlinks on the "
"filesystem to delete files they wouldn't be able to access otherwise.  "
"Applications can use the :data:`rmtree.avoids_symlink_attacks` function "
"attribute to determine which case applies."
msgstr ""
"在支持必要的基于 fd 的函数的平台上，默认会使用 :func:`rmtree` 的可防御符号链接攻击的版本。 "
"在其他平台上，:func:`rmtree` "
"较易遭受符号链接攻击：给定适当的时间和环境，攻击者可以操纵文件系统中的符号链接来删除他们在其他情况下无法访问的文件。 应用程序可以使用 "
":data:`rmtree.avoids_symlink_attacks` 函数属性来确定此类情况具体是哪一些。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:295
msgid ""
"If *onerror* is provided, it must be a callable that accepts three "
"parameters: *function*, *path*, and *excinfo*."
msgstr "如果提供了 *onerror*，它必须为接受三个形参的可调用对象: *function*, *path* 和 *excinfo*。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:298
msgid ""
"The first parameter, *function*, is the function which raised the exception;"
" it depends on the platform and implementation.  The second parameter, "
"*path*, will be the path name passed to *function*.  The third parameter, "
"*excinfo*, will be the exception information returned by "
":func:`sys.exc_info`.  Exceptions raised by *onerror* will not be caught."
msgstr ""
"第一个形参 *function* 是引发异常的函数；它依赖于具体的平台和实现。 第二个形参 *path* 将是传递给 *function* 的路径名。 "
"第三个形参 *excinfo* 将是由 :func:`sys.exc_info` 所返回的异常信息。 由 *onerror* 所引发的异常将不会被捕获。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:305
msgid ""
"Raises an :ref:`auditing event <auditing>` ``shutil.rmtree`` with argument "
"``path``."
msgstr "引发一个 :ref:`审核事件 <auditing>` ``shutil.rmtree`` 附带参数 ``path``。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:306
msgid ""
"Added a symlink attack resistant version that is used automatically if "
"platform supports fd-based functions."
msgstr "添加了一个防御符号链接攻击的版本，如果平台支持基于 fd 的函数就会被使用。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:310
msgid ""
"On Windows, will no longer delete the contents of a directory junction "
"before removing the junction."
msgstr "在 Windows 上将不会再在移除连接之前删除目录连接中的内容。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:316
msgid ""
"Indicates whether the current platform and implementation provides a symlink"
" attack resistant version of :func:`rmtree`.  Currently this is only true "
"for platforms supporting fd-based directory access functions."
msgstr ""
"指明当前平台和实现是否提供防御符号链接攻击的 :func:`rmtree` 版本。 目前它仅在平台支持基于 fd 的目录访问函数时才返回真值。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:325
msgid ""
"Recursively move a file or directory (*src*) to another location (*dst*) and"
" return the destination."
msgstr "递归地将一个文件或目录 (*src*) 移至另一位置 (*dst*) 并返回目标位置。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:328
msgid ""
"If the destination is an existing directory, then *src* is moved inside that"
" directory. If the destination already exists but is not a directory, it may"
" be overwritten depending on :func:`os.rename` semantics."
msgstr ""
"如果目标是已存在的目录，则 *src* 会被移至该目录下。 如果目标已存在但不是目录，它可能会被覆盖，具体取决于 :func:`os.rename` "
"的语义。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:332
msgid ""
"If the destination is on the current filesystem, then :func:`os.rename` is "
"used. Otherwise, *src* is copied to *dst* using *copy_function* and then "
"removed.  In case of symlinks, a new symlink pointing to the target of *src*"
" will be created in or as *dst* and *src* will be removed."
msgstr ""
"如果目标是在当前文件系统中，则会使用 :func:`os.rename`。 在其他情况下，*src* 将被拷贝至 *dst*，使用的函数为 "
"*copy_function*，然后目标会被移除。 对于符号链接，则将在 *dst* 之下或以其本身为名称创建一个指向 *src* "
"目标的新符号链接，并且 *src* 将被移除。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:337
msgid ""
"If *copy_function* is given, it must be a callable that takes two arguments "
"*src* and *dst*, and will be used to copy *src* to *dest* if "
":func:`os.rename` cannot be used.  If the source is a directory, "
":func:`copytree` is called, passing it the :func:`copy_function`. The "
"default *copy_function* is :func:`copy2`.  Using :func:`~shutil.copy` as the"
" *copy_function* allows the move to succeed when it is not possible to also "
"copy the metadata, at the expense of not copying any of the metadata."
msgstr ""
"如果给出了 *copy_function*，则它必须为接受两个参数 *src* 和 *dst* 的可调用对象，并会在 :func:`os.rename`"
" 无法使用时被用来将 *src* 拷贝到 *dest*。 如果源位置是一个目录，则会调用 :func:`copytree`，并向它传入 "
":func:`copy_function`。 默认的 *copy_function* 是 :func:`copy2`。 使用 "
":func:`~shutil.copy` 作为 *copy_function* "
"允许在无法附带拷贝元数据时让移动操作成功执行，但其代价是不拷贝任何元数据。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:345
msgid ""
"Added explicit symlink handling for foreign filesystems, thus adapting it to"
" the behavior of GNU's :program:`mv`. Now returns *dst*."
msgstr "为异类文件系统添加了显式的符号链接处理，以便使它适应 GNU 的 :program:`mv` 的行为。 现在会返回 *dst*。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:350
msgid "Added the *copy_function* keyword argument."
msgstr "增加了 *copy_function* 关键字参数。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:360
msgid ""
"Return disk usage statistics about the given path as a :term:`named tuple` "
"with the attributes *total*, *used* and *free*, which are the amount of "
"total, used and free space, in bytes. *path* may be a file or a directory."
msgstr ""
"返回给定路径的磁盘使用统计数据，形式为一个 :term:`named tuple`，其中包含 *total*, *used* 和 *free* "
"属性，分别表示总计、已使用和未使用空间的字节数。 *path* 可以是一个文件或是一个目录。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:367
msgid "On Windows, *path* can now be a file or directory."
msgstr "在 Windows 上，*path* 现在可以是一个文件或目录。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:370
msgid ":ref:`Availability <availability>`: Unix, Windows."
msgstr ":ref:`可用性 <availability>`: Unix, Windows。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:374
msgid "Change owner *user* and/or *group* of the given *path*."
msgstr "修改给定 *path* 的所有者 *user* 和/或 *group*。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:376
msgid ""
"*user* can be a system user name or a uid; the same applies to *group*. At "
"least one argument is required."
msgstr "*user* 可以是一个系统用户名或 uid；*group* 同样如此。 要求至少有一个参数。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:379
msgid "See also :func:`os.chown`, the underlying function."
msgstr "另请参阅下层的函数 :func:`os.chown`。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:382
msgid ":ref:`Availability <availability>`: Unix."
msgstr ":ref:`Availability <availability>`: Unix."

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:388
msgid ""
"Return the path to an executable which would be run if the given *cmd* was "
"called.  If no *cmd* would be called, return ``None``."
msgstr "返回当给定的 *cmd* 被调用时将要运行的可执行文件的路径。 如果没有 *cmd* 会被调用则返回 ``None``。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:391
msgid ""
"*mode* is a permission mask passed to :func:`os.access`, by default "
"determining if the file exists and executable."
msgstr "*mode* 是一个传递给 :func:`os.access` 的权限掩码，在默认情况下将确定文件是否存在并且为可执行文件。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:394
msgid ""
"When no *path* is specified, the results of :func:`os.environ` are used, "
"returning either the \"PATH\" value or a fallback of :attr:`os.defpath`."
msgstr ""
"当未指定 *path* 时，将会使用 :func:`os.environ` 的结果，返回 \"PATH\" 的值或回退为 "
":attr:`os.defpath`。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:397
msgid ""
"On Windows, the current directory is always prepended to the *path* whether "
"or not you use the default or provide your own, which is the behavior the "
"command shell uses when finding executables.  Additionally, when finding the"
" *cmd* in the *path*, the ``PATHEXT`` environment variable is checked.  For "
"example, if you call ``shutil.which(\"python\")``, :func:`which` will search"
" ``PATHEXT`` to know that it should look for ``python.exe`` within the "
"*path* directories.  For example, on Windows::"
msgstr ""
"在 Windows 上当前目录总是会被添加为 *path* "
"的第一项，无论你是否使用默认值或提供你自己的路径，这是命令行终端在查找可执行文件时所采用的行为方式。 此外，当在 *path* 中查找 *cmd* "
"时，还会检查 ``PATHEXT`` 环境变量。 例如，如果你调用 ``shutil.which(\"python\")``，:func:`which`"
" 将搜索 ``PATHEXT`` 来确定它要在 *path* 目录中查找 ``python.exe``。 例如，在 Windows 上::"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:410
msgid ""
"The :class:`bytes` type is now accepted.  If *cmd* type is :class:`bytes`, "
"the result type is also :class:`bytes`."
msgstr ""
"现在可以接受 :class:`bytes` 类型。 如果 *cmd* 的类型为 :class:`bytes`，结果的类型也将为 "
":class:`bytes`。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:416
msgid ""
"This exception collects exceptions that are raised during a multi-file "
"operation. For :func:`copytree`, the exception argument is a list of "
"3-tuples (*srcname*, *dstname*, *exception*)."
msgstr ""
"此异常会收集在多文件操作期间所引发的异常。 对于 :func:`copytree`，此异常参数将是一个由三元组 (*srcname*, "
"*dstname*, *exception*) 构成的列表。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:423
msgid "Platform-dependent efficient copy operations"
msgstr "依赖于具体平台的高效拷贝操作"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:425
msgid ""
"Starting from Python 3.8 all functions involving a file copy "
"(:func:`copyfile`, :func:`copy`, :func:`copy2`, :func:`copytree`, and "
":func:`move`) may use platform-specific \"fast-copy\" syscalls in order to "
"copy the file more efficiently (see :issue:`33671`). \"fast-copy\" means "
"that the copying operation occurs within the kernel, avoiding the use of "
"userspace buffers in Python as in \"``outfd.write(infd.read())``\"."
msgstr ""
"从 Python 3.8 开始，所有涉及文件拷贝的函数 (:func:`copyfile`, :func:`copy`, :func:`copy2`, "
":func:`copytree`, 以及 :func:`move`) 将会使用平台专属的 \"fast-copy\" 系统调用以便更高效地拷贝文件 "
"(参见 :issue:`33671`)。 \"fast-copy\" 意味着拷贝操作将发生于内核之中，避免像在 "
"\"``outfd.write(infd.read())``\" 中那样使用用户空间的缓冲区。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:432
msgid "On macOS `fcopyfile`_ is used to copy the file content (not metadata)."
msgstr "在 macOS 上将会使用 `fcopyfile`_ 来拷贝文件内容（不含元数据）。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:434
msgid "On Linux :func:`os.sendfile` is used."
msgstr "在 Linux 上将会使用 :func:`os.sendfile`。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:436
msgid ""
"On Windows :func:`shutil.copyfile` uses a bigger default buffer size (1 MiB "
"instead of 64 KiB) and a :func:`memoryview`-based variant of "
":func:`shutil.copyfileobj` is used."
msgstr ""
"在 Windows 上 :func:`shutil.copyfile` 将会使用更大的默认缓冲区（1 MiB 而非 64 KiB）并且会使用基于 "
":func:`memoryview` 的 :func:`shutil.copyfileobj` 变种形式。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:440
msgid ""
"If the fast-copy operation fails and no data was written in the destination "
"file then shutil will silently fallback on using less efficient "
":func:`copyfileobj` function internally."
msgstr ""
"如果快速拷贝操作失败并且没有数据被写入目标文件，则 shutil 将在内部静默地回退到使用效率较低的 :func:`copyfileobj` 函数。"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:449
msgid "copytree example"
msgstr "copytree 示例"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:451
msgid ""
"This example is the implementation of the :func:`copytree` function, "
"described above, with the docstring omitted.  It demonstrates many of the "
"other functions provided by this module. ::"
msgstr ""
"这个示例就是上面所描述的 :func:`copytree` 函数的实现，其中省略了文档字符串。 它还展示了此模块所提供的许多其他函数。 ::"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:486
msgid "Another example that uses the :func:`ignore_patterns` helper::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:492
msgid ""
"This will copy everything except ``.pyc`` files and files or directories "
"whose name starts with ``tmp``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:495
msgid ""
"Another example that uses the *ignore* argument to add a logging call::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:510
msgid "rmtree example"
msgstr "rmtree 示例"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:512
msgid ""
"This example shows how to remove a directory tree on Windows where some of "
"the files have their read-only bit set. It uses the onerror callback to "
"clear the readonly bit and reattempt the remove. Any subsequent failure will"
" propagate. ::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:530
msgid "Archiving operations"
msgstr "归档操作"

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:534
msgid "Added support for the *xztar* format."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:538
msgid ""
"High-level utilities to create and read compressed and archived files are "
"also provided.  They rely on the :mod:`zipfile` and :mod:`tarfile` modules."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:543
msgid "Create an archive file (such as zip or tar) and return its name."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:545
msgid ""
"*base_name* is the name of the file to create, including the path, minus any"
" format-specific extension. *format* is the archive format: one of \"zip\" "
"(if the :mod:`zlib` module is available), \"tar\", \"gztar\" (if the "
":mod:`zlib` module is available), \"bztar\" (if the :mod:`bz2` module is "
"available), or \"xztar\" (if the :mod:`lzma` module is available)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:551
msgid ""
"*root_dir* is a directory that will be the root directory of the archive; "
"for example, we typically chdir into *root_dir* before creating the archive."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:555
msgid ""
"*base_dir* is the directory where we start archiving from; i.e. *base_dir* "
"will be the common prefix of all files and directories in the archive."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:559
msgid "*root_dir* and *base_dir* both default to the current directory."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:561
msgid ""
"If *dry_run* is true, no archive is created, but the operations that would "
"be executed are logged to *logger*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:564
msgid ""
"*owner* and *group* are used when creating a tar archive. By default, uses "
"the current owner and group."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:567
msgid ""
"*logger* must be an object compatible with :pep:`282`, usually an instance "
"of :class:`logging.Logger`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:570
msgid "The *verbose* argument is unused and deprecated."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:573
msgid ""
"Raises an :ref:`auditing event <auditing>` ``shutil.make_archive`` with "
"arguments ``base_name``, ``format``, ``root_dir``, ``base_dir``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:574
msgid ""
"The modern pax (POSIX.1-2001) format is now used instead of the legacy GNU "
"format for archives created with ``format=\"tar\"``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:581
msgid ""
"Return a list of supported formats for archiving. Each element of the "
"returned sequence is a tuple ``(name, description)``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:584
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:664
msgid "By default :mod:`shutil` provides these formats:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:586
msgid "*zip*: ZIP file (if the :mod:`zlib` module is available)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:587
msgid ""
"*tar*: Uncompressed tar file. Uses POSIX.1-2001 pax format for new archives."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:588
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:669
msgid "*gztar*: gzip'ed tar-file (if the :mod:`zlib` module is available)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:589
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:670
msgid "*bztar*: bzip2'ed tar-file (if the :mod:`bz2` module is available)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:590
#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:671
msgid "*xztar*: xz'ed tar-file (if the :mod:`lzma` module is available)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:592
msgid ""
"You can register new formats or provide your own archiver for any existing "
"formats, by using :func:`register_archive_format`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:598
msgid "Register an archiver for the format *name*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:600
msgid ""
"*function* is the callable that will be used to unpack archives. The "
"callable will receive the *base_name* of the file to create, followed by the"
" *base_dir* (which defaults to :data:`os.curdir`) to start archiving from. "
"Further arguments are passed as keyword arguments: *owner*, *group*, "
"*dry_run* and *logger* (as passed in :func:`make_archive`)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:606
msgid ""
"If given, *extra_args* is a sequence of ``(name, value)`` pairs that will be"
" used as extra keywords arguments when the archiver callable is used."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:609
msgid ""
"*description* is used by :func:`get_archive_formats` which returns the list "
"of archivers.  Defaults to an empty string."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:615
msgid "Remove the archive format *name* from the list of supported formats."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:620
msgid "Unpack an archive. *filename* is the full path of the archive."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:622
msgid ""
"*extract_dir* is the name of the target directory where the archive is "
"unpacked. If not provided, the current working directory is used."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:625
msgid ""
"*format* is the archive format: one of \"zip\", \"tar\", \"gztar\", "
"\"bztar\", or \"xztar\".  Or any other format registered with "
":func:`register_unpack_format`.  If not provided, :func:`unpack_archive` "
"will use the archive file name extension and see if an unpacker was "
"registered for that extension.  In case none is found, a :exc:`ValueError` "
"is raised."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:632
msgid "Accepts a :term:`path-like object` for *filename* and *extract_dir*."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:638
msgid ""
"Registers an unpack format. *name* is the name of the format and "
"*extensions* is a list of extensions corresponding to the format, like "
"``.zip`` for Zip files."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:642
msgid ""
"*function* is the callable that will be used to unpack archives. The "
"callable will receive the path of the archive, followed by the directory the"
" archive must be extracted to."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:646
msgid ""
"When provided, *extra_args* is a sequence of ``(name, value)`` tuples that "
"will be passed as keywords arguments to the callable."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:649
msgid ""
"*description* can be provided to describe the format, and will be returned "
"by the :func:`get_unpack_formats` function."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:655
msgid "Unregister an unpack format. *name* is the name of the format."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:660
msgid ""
"Return a list of all registered formats for unpacking. Each element of the "
"returned sequence is a tuple ``(name, extensions, description)``."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:666
msgid ""
"*zip*: ZIP file (unpacking compressed files works only if the corresponding "
"module is available)."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:668
msgid "*tar*: uncompressed tar file."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:673
msgid ""
"You can register new formats or provide your own unpacker for any existing "
"formats, by using :func:`register_unpack_format`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:680
msgid "Archiving example"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:682
msgid ""
"In this example, we create a gzip'ed tar-file archive containing all files "
"found in the :file:`.ssh` directory of the user::"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:692
msgid "The resulting archive contains:"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:708
msgid "Querying the size of the output terminal"
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:712
msgid "Get the size of the terminal window."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:714
msgid ""
"For each of the two dimensions, the environment variable, ``COLUMNS`` and "
"``LINES`` respectively, is checked. If the variable is defined and the value"
" is a positive integer, it is used."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:718
msgid ""
"When ``COLUMNS`` or ``LINES`` is not defined, which is the common case, the "
"terminal connected to :data:`sys.__stdout__` is queried by invoking "
":func:`os.get_terminal_size`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:722
msgid ""
"If the terminal size cannot be successfully queried, either because the "
"system doesn't support querying, or because we are not connected to a "
"terminal, the value given in ``fallback`` parameter is used. ``fallback`` "
"defaults to ``(80, 24)`` which is the default size used by many terminal "
"emulators."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:728
msgid "The value returned is a named tuple of type :class:`os.terminal_size`."
msgstr ""

#: /home/travis/build/python/cpython-doc-catalog/Doc/library/shutil.rst:730
msgid ""
"See also: The Single UNIX Specification, Version 2, `Other Environment "
"Variables`_."
msgstr ""
