# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Freesand Leo <yuqinju@163.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-10 04:47+0000\n"
"PO-Revision-Date: 2019-09-01 03:12+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2020\n"
"Language-Team: Chinese (China) (https://www.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/netrc.rst:3
msgid ":mod:`netrc` --- netrc file processing"
msgstr ":mod:`netrc` --- netrc 文件处理"

#: ../../library/netrc.rst:11
msgid "**Source code:** :source:`Lib/netrc.py`"
msgstr "**源代码:** :source:`Lib/netrc.py`"

#: ../../library/netrc.rst:15
msgid ""
"The :class:`~netrc.netrc` class parses and encapsulates the netrc file "
"format used by the Unix :program:`ftp` program and other FTP clients."
msgstr ""
":class:`~netrc.netrc` 类解析并封装了 Unix 的 :program:`ftp` 程序和其他 FTP 客户端所使用的 netrc "
"文件格式。"

#: ../../library/netrc.rst:21
msgid ""
"A :class:`~netrc.netrc` instance or subclass instance encapsulates data from"
"  a netrc file.  The initialization argument, if present, specifies the file"
" to parse.  If no argument is given, the file :file:`.netrc` in the user's "
"home directory -- as determined by :func:`os.path.expanduser` -- will be "
"read.  Otherwise, a :exc:`FileNotFoundError` exception will be raised. Parse"
" errors will raise :exc:`NetrcParseError` with diagnostic information "
"including the file name, line number, and terminating token. If no argument "
"is specified on a POSIX system, the presence of passwords in the "
":file:`.netrc` file will raise a :exc:`NetrcParseError` if the file "
"ownership or permissions are insecure (owned by a user other than the user "
"running the process, or accessible for read or write by any other user). "
"This implements security behavior equivalent to that of ftp and other "
"programs that use :file:`.netrc`."
msgstr ""
":class:`~netrc.netrc` 的实例或其子类的实例会被用来封装来自 netrc 文件的数据。 如果有初始化参数，它将指明要解析的文件。 "
"如果未给出参数，则位于用户家目录的 :file:`.netrc` 文件 -- 即 :func:`os.path.expanduser` 所确定的文件 "
"-- 将会被读取。 在其他情况下，则将引发 :exc:`FileNotFoundError` 异常。 解析错误将引发 "
":exc:`NetrcParseError` 并附带诊断信息，包括文件名、行号以及终止令牌。 如果在 POSIX 系统上未指明参数，则当 "
":file:`.netrc` 文件中有密码时，如果文件归属或权限不安全（归属的用户不是运行进程的用户，或者可供任何其他用户读取或写入）将引发 "
":exc:`NetrcParseError`。 这实现了与 ftp 和其他使用 :file:`.netrc` 的程序同等的安全行为。"

#: ../../library/netrc.rst:35
msgid "Added the POSIX permission check."
msgstr "添加了 POSIX 权限检查。"

#: ../../library/netrc.rst:37
msgid ""
":func:`os.path.expanduser` is used to find the location of the "
":file:`.netrc` file when *file* is not passed as argument."
msgstr ""

#: ../../library/netrc.rst:44
msgid ""
"Exception raised by the :class:`~netrc.netrc` class when syntactical errors "
"are encountered in source text.  Instances of this exception provide three "
"interesting attributes:  :attr:`msg` is a textual explanation of the error, "
":attr:`filename` is the name of the source file, and :attr:`lineno` gives "
"the line number on which the error was found."
msgstr ""

#: ../../library/netrc.rst:54
msgid "netrc Objects"
msgstr ""

#: ../../library/netrc.rst:56
msgid "A :class:`~netrc.netrc` instance has the following methods:"
msgstr ""

#: ../../library/netrc.rst:61
msgid ""
"Return a 3-tuple ``(login, account, password)`` of authenticators for "
"*host*. If the netrc file did not contain an entry for the given host, "
"return the tuple associated with the 'default' entry.  If neither matching "
"host nor default entry is available, return ``None``."
msgstr ""

#: ../../library/netrc.rst:69
msgid ""
"Dump the class data as a string in the format of a netrc file. (This "
"discards comments and may reorder the entries.)"
msgstr ""

#: ../../library/netrc.rst:72
msgid "Instances of :class:`~netrc.netrc` have public instance variables:"
msgstr ""

#: ../../library/netrc.rst:77
msgid ""
"Dictionary mapping host names to ``(login, account, password)`` tuples.  The"
" 'default' entry, if any, is represented as a pseudo-host by that name."
msgstr ""

#: ../../library/netrc.rst:83
msgid "Dictionary mapping macro names to string lists."
msgstr ""

#: ../../library/netrc.rst:87
msgid ""
"Passwords are limited to a subset of the ASCII character set.  All ASCII "
"punctuation is allowed in passwords, however, note that whitespace and non-"
"printable characters are not allowed in passwords.  This is a limitation of "
"the way the .netrc file is parsed and may be removed in the future."
msgstr ""
