# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-01-05 15:01+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: ww song <sww4718168@gmail.com>, 2018\n"
"Language-Team: Chinese (China) (https://www.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/asyncio.rst:2
msgid ":mod:`asyncio` --- Asynchronous I/O, event loop, coroutines and tasks"
msgstr ":mod:`asyncio` --- 异步I/O，事件循环，coroutines and tasks"

#: ../../library/asyncio.rst:9
msgid "**Source code:** :source:`Lib/asyncio/`"
msgstr "**源码：** :source:`Lib/asyncio/`"

#: ../../library/asyncio.rst:13
msgid ""
"This module provides infrastructure for writing single-threaded concurrent "
"code using coroutines, multiplexing I/O access over sockets and other "
"resources, running network clients and servers, and other related "
"primitives. Here is a more detailed list of the package contents:"
msgstr ""
"工具该模块提供了使用协程编写单线程并发代码的基础结构，在套接字和其他资源上I/O访问多路复用，运行网络客户端和服务器以及其他相关元语。下面是包内容更详细的清单："

#: ../../library/asyncio.rst:18
msgid ""
"a pluggable :ref:`event loop <asyncio-event-loop>` with various system-"
"specific implementations;"
msgstr "一个可插拔的 :ref:`事件循环 <asyncio-event-loop>` 和各种系统特定的实现；"

#: ../../library/asyncio.rst:21
msgid ""
":ref:`transport <asyncio-transport>` and :ref:`protocol <asyncio-protocol>` "
"abstractions (similar to those in `Twisted "
"<https://twistedmatrix.com/trac/>`_);"
msgstr ""
":ref:`transport <asyncio-transport>` 和 :ref:`protocol <asyncio-protocol>` "
"的抽象（类似 `Twisted <https://twistedmatrix.com/trac/>`_）; "

#: ../../library/asyncio.rst:24
msgid ""
"concrete support for TCP, UDP, SSL, subprocess pipes, delayed calls, and "
"others (some may be system-dependent);"
msgstr "支持TCP, UDP, SSL, subprocess pipes, 延后的回调和其他（有些可能与系统有关）；"

#: ../../library/asyncio.rst:27
msgid ""
"a :class:`Future` class that mimics the one in the :mod:`concurrent.futures`"
" module, but adapted for use with the event loop;"
msgstr "一个模仿 :mod:`concurrent.futures` 模块但适配事件循环的 :class:`Future` 类"

#: ../../library/asyncio.rst:30
msgid ""
"coroutines and tasks based on ``yield from`` (:PEP:`380`), to help write "
"concurrent code in a sequential fashion;"
msgstr "基于 ``yield from`` （:PEP:`380`）的coroutines和tasks，帮助我们以顺序的方式编写并发的代码"

#: ../../library/asyncio.rst:33
msgid "cancellation support for :class:`Future`\\s and coroutines;"
msgstr ":class:`Future`\\s和coroutines支持取消；"

#: ../../library/asyncio.rst:35
msgid ""
":ref:`synchronization primitives <asyncio-sync>` for use between coroutines "
"in a single thread, mimicking those in the :mod:`threading` module;"
msgstr ""
"模仿 :mod:`threading` 模块的 :ref:`同步原语<asyncio-sync>` 可以在多个coroutines之间使用；"

#: ../../library/asyncio.rst:38
msgid ""
"an interface for passing work off to a threadpool, for times when you "
"absolutely, positively have to use a library that makes blocking I/O calls."
msgstr "当你绝对肯定不得不使用阻塞I/O调用的库时，一个将工作传递给线程池的接口。"

#: ../../library/asyncio.rst:42
msgid ""
"Asynchronous programming is more complex than classical \"sequential\" "
"programming: see the :ref:`Develop with asyncio <asyncio-dev>` page which "
"lists common traps and explains how to avoid them. :ref:`Enable the debug "
"mode <asyncio-debug-mode>` during development to detect common issues."
msgstr ""
"异步编程比传统的“顺序”编程更复杂：请参阅 :ref:`使用asyncio开发<asyncio-dev>` "
"的页面，其中列出了常见的陷阱并解释了如何避免它们。在开发过程中 :ref:`启用调试模式<asyncio-debug-mode>` 以检测常见问题。"

#: ../../library/asyncio.rst:47
msgid "Table of contents:"
msgstr "目录："

#: ../../library/asyncio.rst:64
msgid ""
"The :mod:`asyncio` module was designed in :PEP:`3156`. For a motivational "
"primer on transports and protocols, see :PEP:`3153`."
msgstr ""
":mod:`asyncio` 的设计在 :PEP:`3156`。设计transports和protocols的原因见： :PEP:`3153`。"
